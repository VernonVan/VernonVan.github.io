{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/uploads/avatar.jpg","path":"uploads/avatar.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"d04e147be409389916aec87619895cb27973767d","modified":1491360043000},{"_id":"themes/next/.DS_Store","hash":"c5ff81f0112da17481384f2ad5f9cc21a7a7fe76","modified":1490763114000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1484627277000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1484627277000},{"_id":"themes/next/.gitignore","hash":"5f09fca02e030b7676c1d312cd88ce8fbccf381c","modified":1484627277000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1484627277000},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1484627277000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1484627277000},{"_id":"themes/next/README.en.md","hash":"3b0c7998cf17f9cf9e1a5bfcd65679a43a00c817","modified":1484627277000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1484627277000},{"_id":"themes/next/bower.json","hash":"5abc236d9cc2512f5457ed57c1fba76669eb7399","modified":1484627277000},{"_id":"themes/next/_config.yml","hash":"b7011ba22068abacaafc46d01760d543583679ca","modified":1491012876000},{"_id":"themes/next/gulpfile.coffee","hash":"61ef0606a8134894d7ac796bc8d0fa4ba6a94483","modified":1484627277000},{"_id":"themes/next/package.json","hash":"877cb98025e59015532c4c9a04a33e2af4ad56f9","modified":1484627277000},{"_id":"source/_drafts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1490756768000},{"_id":"source/_drafts/PPRoundedAvatar-高性能的异步裁剪圆角头像.md","hash":"ba014c4e9759c9acfcff3adbb968e225e9a902dd","modified":1490757009000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1491011759000},{"_id":"source/_posts/ruanpapa和又吉君的日常之三.md","hash":"bfbb9f19efdebc964759719c749d09847be45f12","modified":1491876827000},{"_id":"source/_posts/PPRoundedAvatar-高性能的异步裁剪圆角头像控件.md","hash":"10a7cef1c96a57547e56e9401f084508499fbf31","modified":1491391291000},{"_id":"source/_posts/ruanpapa和又吉君的日常之二.md","hash":"d859a8bdabb1f6e51c30aa8f3723c813b065dcd6","modified":1491875988000},{"_id":"source/_posts/Swift的lazy关键字–延迟加载.md","hash":"637457675f2a19fb79d7c0d4fea5636ac97cb20c","modified":1490852530000},{"_id":"source/_posts/ruanpapa和又吉君的日常之一.md","hash":"2562acaca0637ebd1c89c1f5ab8dac4624d58039","modified":1491785544000},{"_id":"source/_posts/ruanpapa和又吉君的日常之零.md","hash":"e65558f9ce0fcab3ba392d31a1b29bd2990cb2e6","modified":1491876030000},{"_id":"source/categories/index.md","hash":"88a08137c471c454d17be60256a2327c3783f555","modified":1490758147000},{"_id":"source/tags/index.md","hash":"6a4041442b6e1a488885184c8a21e0abfec43e78","modified":1490853738000},{"_id":"themes/next/.git/.DS_Store","hash":"802d66698f1d379033b490f3cbe7ebfcb479f1a2","modified":1484632491000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1484627277000},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1484627277000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1484624149000},{"_id":"themes/next/.git/index","hash":"72e8d12da4bcda6a06d9b510022223163651bcac","modified":1490755806000},{"_id":"themes/next/.git/packed-refs","hash":"12ca02d8374d9a441a6c8a6c9ed061432cb0a8c9","modified":1484627277000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1484627277000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1484627277000},{"_id":"themes/next/languages/de.yml","hash":"1fdea1f84b7f691f5b4dd4d2b43eeb27b10fa0c8","modified":1484627277000},{"_id":"themes/next/languages/default.yml","hash":"767470a80dc257e23e14c3a78e8c52a46c9d6209","modified":1484627277000},{"_id":"themes/next/languages/en.yml","hash":"40057d6608e825d06e0864bac4dcd27ed88ada87","modified":1484627277000},{"_id":"themes/next/languages/fr-FR.yml","hash":"9fca01ef917d33ae2ae6bc04561ec6799dff5351","modified":1484627277000},{"_id":"themes/next/languages/id.yml","hash":"34396bef27c4ab9e9a3c5d3e3aa94b0e3b3a7b0d","modified":1484627277000},{"_id":"themes/next/languages/ja.yml","hash":"49f12149edcc1892b26a6207328cda64da20116d","modified":1484627277000},{"_id":"themes/next/languages/ko.yml","hash":"b6bc5d6b0c000deb44099b42d3aebb8c49dbfca9","modified":1484627277000},{"_id":"themes/next/languages/pt-BR.yml","hash":"7742ba4c0d682cbe1d38305332ebc928abd754b5","modified":1484627277000},{"_id":"themes/next/languages/pt.yml","hash":"6b660b117314cad93f08757601df3adb04c68beb","modified":1484627277000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"f6c9fafa0f5f0050cd07ca2cf5e38fbae3e28145","modified":1484627277000},{"_id":"themes/next/languages/zh-hk.yml","hash":"34c84c6d04447a25bd5eac576922a13947c000e2","modified":1484627277000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1484627277000},{"_id":"themes/next/languages/zh-tw.yml","hash":"c97a5c41149de9b17f33439b0ecf0eff6fdae50e","modified":1484627277000},{"_id":"themes/next/languages/ru.yml","hash":"257d11e626cbe4b9b78785a764190b9278f95c28","modified":1484627277000},{"_id":"themes/next/scripts/.DS_Store","hash":"6eb04a3f92dc5c9b416b4642618f762cae906dfa","modified":1490763120000},{"_id":"themes/next/source/.DS_Store","hash":"2b7a5c058c230d52656a31f98ba9933bf3883514","modified":1489560594000},{"_id":"themes/next/layout/.DS_Store","hash":"99ffecca062584f9aef28ed327e2fdc4784d9e5b","modified":1490763422000},{"_id":"themes/next/layout/_layout.swig","hash":"2fa3c74066843a859fac77803324a1de51044da9","modified":1484627277000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1484627277000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1484627277000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1484627277000},{"_id":"themes/next/layout/page.swig","hash":"3727fab9dadb967e9c2204edca787dc72264674a","modified":1484627277000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1484627277000},{"_id":"themes/next/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1484627277000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1484627277000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1484627277000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1484627277000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1484627277000},{"_id":"source/uploads/avatar.jpg","hash":"8fc76c75f02f3fa85500ae17044f8425d38ea8f2","modified":1490854048000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484627277000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1484624149000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1484624149000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1484624149000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1484624149000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1484624149000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1484624149000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1484624149000},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1484624149000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1484624149000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1484624149000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1484624149000},{"_id":"themes/next/.git/logs/HEAD","hash":"2e72f33077081d2e8672ee3096220379300f8a0b","modified":1484627277000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1484627277000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1484627277000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1484627277000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1484627277000},{"_id":"themes/next/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1484627277000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1484627277000},{"_id":"themes/next/source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1490854092000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1484627277000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1484627277000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1484627277000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1484627277000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1484627277000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1484627277000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1484627277000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1484627277000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1484627277000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1484627277000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1484627277000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1484627277000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1484627277000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1484627277000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1484627277000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1484627277000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"5864f5567ba5efeabcf6ea355013c0b603ee07f2","modified":1484627277000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1484627277000},{"_id":"themes/next/layout/_macro/post.swig","hash":"e6016def9b512188f4c2725399c9adc7bc41cdae","modified":1484627277000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"43d8830bb19da4fc7a5773866be19fa066b62645","modified":1484627277000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1484627277000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"78ccfc1dc915247c1fec3c86d742e0f4c2f6d99c","modified":1484627277000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1484627277000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1484627277000},{"_id":"themes/next/layout/_partials/head.swig","hash":"ca56f92e2fa82b03853869f5073ee1a5626a4796","modified":1484627277000},{"_id":"themes/next/layout/_partials/header.swig","hash":"adab5c3f7b173f1b45454787f39dde07aea03483","modified":1484627277000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"39d613e5a9f8389d4ea52d6082502af8e833b9f2","modified":1484627277000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1484627277000},{"_id":"themes/next/layout/_partials/search.swig","hash":"1431719d1dbba3f5ee385eebc46376d1a960b2d5","modified":1484627277000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1484627277000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1484627277000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1484627277000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"4512867d80d9eddfc3a0f5fea3c456f33aa9d522","modified":1484627277000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484627277000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484627277000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484627277000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484627277000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484627277000},{"_id":"themes/next/source/images/avatar.jpg","hash":"8fc76c75f02f3fa85500ae17044f8425d38ea8f2","modified":1490854048000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484627277000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484627277000},{"_id":"themes/next/.git/refs/heads/master","hash":"2311b7302155cc3ec46e40ad16dc5c94e36328b4","modified":1484627277000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1484627277000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1484627277000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1484627277000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1484627277000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c459aa6d607d8bcb747544e74f6ad0b8374aa3b1","modified":1484627277000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"fc185c6cec79593775d1c2440dbe2a71cfbe2e99","modified":1484627277000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1484627277000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1484627277000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1484627277000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1484627277000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1484627277000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1484627277000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1484627277000},{"_id":"themes/next/source/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1484627277000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1484627277000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1484627277000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1484627277000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1484627277000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1484627277000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1484627277000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"c1072942459fa0880e8a33a1bd929176b62b4171","modified":1484627277000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1484627277000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1484627277000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1484627277000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1484627277000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1484627277000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1484627277000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1484627277000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1484627277000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1484627277000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1484627277000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1484627277000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1484627277000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1484627277000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1484627277000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1484627277000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1484627277000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1484627277000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1484627277000},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1484627277000},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"636f1181dd5887a70b4a08ca8f655d4e46635792","modified":1484627277000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1484627277000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1484627277000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1484627277000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1484627277000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1484627277000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1484627277000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1484627277000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1484627277000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1484627277000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1484627277000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1484627277000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"394d9fff7951287cc90f52acc2d4cbfd1bae079d","modified":1484627277000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"4abc01bc870e1d7a783cdbd26166edc782a6a4f4","modified":1484627277000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1484627277000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"b460e27db3dcd4ab40b17d8926a5c4e624f293a9","modified":1484627277000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1484627277000},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1484627277000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1484627277000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1484627277000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"2e72f33077081d2e8672ee3096220379300f8a0b","modified":1484627277000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1484627277000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1484627277000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1484627277000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1484627277000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1484627277000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1484627277000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1484627277000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1484627277000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1484627277000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1484627277000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1484627277000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1484627277000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1484627277000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1484627277000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1484627277000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1484627277000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1484627277000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1484627277000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1484627277000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"ff9f163bb05c0709577040a875924d36c9ab99d6","modified":1484627277000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"dcf9fe43b2ef78b923118ba39efedb38760e76b1","modified":1484627277000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"1408209dfb9a22a0982a30bdbd14842c2b53f264","modified":1484627277000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1484627277000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1484627277000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9b63bd8effc7cf4b96acdea4d73add7df934a222","modified":1484627277000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1484627277000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1484627277000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1484627277000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1484627277000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1484627277000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1484627277000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1484627277000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1484627277000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1484627277000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1484627277000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1484627277000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1484627277000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1484627277000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1484627277000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1484627277000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1484627277000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1484627277000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"fb1d04ede838b52ca7541973f86c3810f1ad396e","modified":1484627277000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1484627277000},{"_id":"themes/next/layout/_scripts/third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1484627277000},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1484627277000},{"_id":"themes/next/layout/_scripts/third-party/comments/youyan.swig","hash":"ea8078fa9e10be2bb042749d8b6a97adc38f914c","modified":1484627277000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1484627277000},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1484627277000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1484627277000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1484627277000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1484627277000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1484627277000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1484627277000},{"_id":"themes/next/.git/objects/pack/pack-00f07f1de24eae5e11a6eafe2ba682e19a17d816.idx","hash":"9d5dbc105ad16f3b5a38b696e32be0282b529cf3","modified":1484627276000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1484627277000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1484627277000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1484627277000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1484627277000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1484627277000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"2e72f33077081d2e8672ee3096220379300f8a0b","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4b7f81e1006e7acee3d1c840ccba155239f830cc","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"fdfadbb4483043c7e0afd541ee9712389e633517","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"7f1aab694caf603809e33cff82beea84cd0128fd","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"c6dab7661a6b8c678b21b7eb273cef7100f970f6","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"bfd806d0a9f21446a22df82ac02e37d0075cc3b5","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"3eb73cee103b810fa56901577ecb9c9bb1793cff","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"eba491ae624b4c843c8be4c94a044085dad4ba0f","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"637c6b32c58ecf40041be6e911471cd82671919b","modified":1484627277000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"42348219db93a85d2ee23cb06cebd4d8ab121726","modified":1484627277000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1484627277000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1484627277000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1484627277000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1484627277000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1484627277000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1484627277000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1484627277000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1484627277000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1484627277000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1484627277000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1484627277000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1484627277000},{"_id":"themes/next/.git/objects/pack/pack-00f07f1de24eae5e11a6eafe2ba682e19a17d816.pack","hash":"40c8757daa949da2de470b088593680ae25c22d1","modified":1484627276000},{"_id":"public/tags/index.html","hash":"3fc0b2621b44a82b601245a4046728f1cf6da181","modified":1491875559434},{"_id":"public/categories/index.html","hash":"1cbd1afa18c1b435e3bc6a72175a43d74373e936","modified":1491875559435},{"_id":"public/archives/2017/03/index.html","hash":"15318123d5d5701b71aa696d15b762739b3a58d0","modified":1491875559435},{"_id":"public/archives/2016/index.html","hash":"bda022d6922b6ca7c3e941bc34daa25324930105","modified":1491875559435},{"_id":"public/archives/2016/12/index.html","hash":"8c0aedccb8da0dd5bdba7bc3bc35426986ba0b4f","modified":1491875559435},{"_id":"public/categories/ruanpapa-又吉君的日常/index.html","hash":"3d35d1bba2c2a04177f8e5bdf5a74a24430784b5","modified":1491875559435},{"_id":"public/tags/iOS/index.html","hash":"d852e456eae9bcc2f9458c1f00bf91f071d28015","modified":1491875559435},{"_id":"public/tags/Objective-C/index.html","hash":"bb9ee7b6de50a54333f524aa37b0afb342c2b368","modified":1491875559436},{"_id":"public/tags/Swift/index.html","hash":"1ea96ec4ee30d337f2cf3b1cfde8214afc5138d6","modified":1491875559436},{"_id":"public/categories/ruanpapa-技术贴/index.html","hash":"190b89012a50c864f6872abab717169265d0ecf2","modified":1491875559436},{"_id":"public/2017/04/01/ruanpapa和又吉君的日常之一/index.html","hash":"91b18090753fe706d57ad9fe7aa51562d75c07c3","modified":1491875559436},{"_id":"public/2017/03/30/ruanpapa和又吉君的日常之零/index.html","hash":"0d43b0abcdedaa30be7adcf6be732ad3c985751c","modified":1491876041821},{"_id":"public/2017/04/10/ruanpapa和又吉君的日常之二/index.html","hash":"c9c69780e514d8f0c0ec81e9d2497a11748d1207","modified":1491876041821},{"_id":"public/archives/index.html","hash":"c4617ef5d832c8bc4509ce853e141e1435a20f01","modified":1491875559436},{"_id":"public/2017/04/01/PPRoundedAvatar-高性能的异步裁剪圆角头像控件/index.html","hash":"f55a8dd2e6df2da4db0a45bdc25a8733095ea5f8","modified":1491875559436},{"_id":"public/2016/12/28/Swift的lazy关键字–延迟加载/index.html","hash":"f65d4c3fbe5239e8e15903bf374570200dbc439b","modified":1491875559436},{"_id":"public/archives/2017/index.html","hash":"b93c47e0cdf2cefb048bb2d220f40d3a08e8bf87","modified":1491875559436},{"_id":"public/archives/2017/04/index.html","hash":"2cb77241aebda7fb8d773eed278d8bb02a575fc2","modified":1491875559437},{"_id":"public/index.html","hash":"6ea8222da48afbf490036bf0b8b9740aa5710692","modified":1491876837706},{"_id":"public/2017/04/11/ruanpapa和又吉君的日常之三/index.html","hash":"2cb8485ea6881648f68acf6afd34358d41d28aeb","modified":1491876837706},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1491875559473},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1491875559473},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1491875559474},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1491875559474},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1491875559474},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1491875559474},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1491875559474},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1491875559474},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1491875559474},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1491875559474},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1491875559474},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1491875559474},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1491875559475},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1491875559475},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1491875559475},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1491875559475},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1491875559475},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1491875559475},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1491875559475},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1491875559475},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1491875559475},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1491875559475},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1491875559475},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1491875559475},{"_id":"public/uploads/avatar.jpg","hash":"8fc76c75f02f3fa85500ae17044f8425d38ea8f2","modified":1491875559476},{"_id":"public/images/avatar.jpg","hash":"8fc76c75f02f3fa85500ae17044f8425d38ea8f2","modified":1491875560483},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1491875560487},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1491875560500},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1491875560500},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1491875560500},{"_id":"public/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1491875560511},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1491875560511},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1491875560511},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1491875560511},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1491875560511},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1491875560511},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1491875560511},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1491875560511},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1491875560512},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1491875560512},{"_id":"public/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1491875560512},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1491875560512},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1491875560512},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1491875560512},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1491875560512},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1491875560512},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1491875560513},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1491875560513},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1491875560513},{"_id":"public/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1491875560513},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1491875560513},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1491875560513},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1491875560513},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1491875560513},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1491875560513},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1491875560513},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1491875560514},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1491875560514},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1491875560514},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1491875560514},{"_id":"public/css/main.css","hash":"6859027e05558f9bcbb0553f6a88d2127a22b20d","modified":1491875560514},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1491875560514},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1491875560514},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1491875560514},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1491875560514},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1491875560514},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1491875560514},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1491875560514},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1491875560515},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1491875560515},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1491875560515},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1491875560515},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1491875560522}],"Category":[{"name":"ruanpapa&又吉君的日常","_id":"cj1cw6rfi0005l53ttjaxrw3i"},{"name":"ruanpapa--技术贴","_id":"cj1cw6rfx000al53tmqoubm9n"}],"Data":[],"Page":[{"title":"分类","date":"2017-03-29T03:12:30.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2017-03-29 11:12:30\ntype: \"categories\"\ncomments: false\n---\n","updated":"2017-03-29T03:29:07.000Z","path":"categories/index.html","layout":"page","_id":"cj1cw6rf50001l53tv7139zo7","content":"","excerpt":"","more":""},{"title":"所有标签","date":"2017-03-29T03:16:39.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 所有标签\ndate: 2017-03-29 11:16:39\ntype: \"tags\"\ncomments: false\n---\n","updated":"2017-03-30T06:02:18.000Z","path":"tags/index.html","layout":"page","_id":"cj1cw6rfe0003l53tg6pqlaap","content":"","excerpt":"","more":""}],"Post":[{"title":"PPRoundedAvatar--高性能的异步裁剪圆角头像","_content":"","source":"_drafts/PPRoundedAvatar-高性能的异步裁剪圆角头像.md","raw":"---\ntitle: PPRoundedAvatar--高性能的异步裁剪圆角头像\ntags:\n---\n","slug":"PPRoundedAvatar-高性能的异步裁剪圆角头像","published":0,"date":"2017-03-29T03:10:09.000Z","updated":"2017-03-29T03:10:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1cw6rez0000l53t4yvv8eoj","content":"","excerpt":"","more":""},{"title":"ruanpapa和又吉君的日常之三","date":"2017-04-11T01:46:24.000Z","_content":"\n## ruanpapa和又吉君的日常之三\n\n > 前几天周末，我闲着没事画了一下水彩画。去年说要学一下水彩画，到今年才练了两次手˚✧₊⁎❝᷀ົཽ≀ˍ̮ ❝᷀ົཽ⁎⁺˳✧༚\n >\n > - **骚逼**    的秀一下：\n >\n > - ![又吉君的第二次水彩](http://upload-images.jianshu.io/upload_images/5431890-edfdec991f26f35a.jpg)\n >\n >    ​\n >\n >    <p align=\"center\"><font color=\"9E9E9E\"><u>又吉君的第二次水彩</u></font></p>\n >\n >    <br>\n >\n >    <p align=\"center\">（没有纸...拿的素描纸画的....）</p>\n >\n >   ​\n\n\n### 于是，ruanpapa叫我教他画画\n\n### 哈哈哈哈哈哈哈哈哈\n\n* 我就让他自己先瞎画，随意涂鸦一下\n   ![好奇的ruanpapa](http://upload-images.jianshu.io/upload_images/5431890-79043c46600a0f44.jpg)\n\n   <p align=\"center\"><font color=\"9E9E9E\"><u>好奇的ruanpapa</u></font></p>\n\n   <br>\n\n* 于是，我就给他做了个示范，在相册里随意选了几张图片，在微信里编辑起来了。\n   **如下图：**\n   ![又吉君有剧情的示范](http://upload-images.jianshu.io/upload_images/5431890-b2e9236ecaf56952.jpg)\n\n   <p align=\"center\"><font color=\"9E9E9E\"><u>又吉君有剧情的示范</u></font></p>\n\n   <br>\n\n* 然后......**哈哈哈哈哈哈哈哈哈哈哈哈**，他竟然画成这个样子！！！！！！！！太可爱了！！(〃ω〃)\n   ![ruanpapa 的涂鸦](http://upload-images.jianshu.io/upload_images/5431890-4964c7dac40f7e83.jpg)\n\n   <p align=\"center\"><font color=\"9E9E9E\"><u>ruanpapa的涂鸦</u></font></p>\n\n   <br>\n\n* 哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈！！！！！！\n\n* 虽然现在画风这么可爱，但是想想以后可能还会在博客里看到papa的进步噢！！！感觉棒棒的呢！！！(・ω・)ノ\n\n* papa你要努力成为我这样的灵魂画师噢！！**哈哈哈哈哈啊哈哈哈哈哈哈**\n\n\n* 我是又吉君，一个集ruanpapa和灵魂画手与一身的大可爱！\n\n  <div align=center> \n\n  ![喵～](http://upload-images.jianshu.io/upload_images/5431890-086ab893f76633bf.jpg)\n\n  </div>\n\n<p align=\"center\"><font color=\"9E9E9E\"><u>喵~</u></font></p>\n\n<br>\n<br>\n<p align=\"right\">by：又吉君</p>","source":"_posts/ruanpapa和又吉君的日常之三.md","raw":"---\ntitle: ruanpapa和又吉君的日常之三\ndate: 2017-04-11 09:46:24\ntags:\ncategories:\n- ruanpapa&又吉君的日常\n---\n\n## ruanpapa和又吉君的日常之三\n\n > 前几天周末，我闲着没事画了一下水彩画。去年说要学一下水彩画，到今年才练了两次手˚✧₊⁎❝᷀ົཽ≀ˍ̮ ❝᷀ົཽ⁎⁺˳✧༚\n >\n > - **骚逼**    的秀一下：\n >\n > - ![又吉君的第二次水彩](http://upload-images.jianshu.io/upload_images/5431890-edfdec991f26f35a.jpg)\n >\n >    ​\n >\n >    <p align=\"center\"><font color=\"9E9E9E\"><u>又吉君的第二次水彩</u></font></p>\n >\n >    <br>\n >\n >    <p align=\"center\">（没有纸...拿的素描纸画的....）</p>\n >\n >   ​\n\n\n### 于是，ruanpapa叫我教他画画\n\n### 哈哈哈哈哈哈哈哈哈\n\n* 我就让他自己先瞎画，随意涂鸦一下\n   ![好奇的ruanpapa](http://upload-images.jianshu.io/upload_images/5431890-79043c46600a0f44.jpg)\n\n   <p align=\"center\"><font color=\"9E9E9E\"><u>好奇的ruanpapa</u></font></p>\n\n   <br>\n\n* 于是，我就给他做了个示范，在相册里随意选了几张图片，在微信里编辑起来了。\n   **如下图：**\n   ![又吉君有剧情的示范](http://upload-images.jianshu.io/upload_images/5431890-b2e9236ecaf56952.jpg)\n\n   <p align=\"center\"><font color=\"9E9E9E\"><u>又吉君有剧情的示范</u></font></p>\n\n   <br>\n\n* 然后......**哈哈哈哈哈哈哈哈哈哈哈哈**，他竟然画成这个样子！！！！！！！！太可爱了！！(〃ω〃)\n   ![ruanpapa 的涂鸦](http://upload-images.jianshu.io/upload_images/5431890-4964c7dac40f7e83.jpg)\n\n   <p align=\"center\"><font color=\"9E9E9E\"><u>ruanpapa的涂鸦</u></font></p>\n\n   <br>\n\n* 哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈！！！！！！\n\n* 虽然现在画风这么可爱，但是想想以后可能还会在博客里看到papa的进步噢！！！感觉棒棒的呢！！！(・ω・)ノ\n\n* papa你要努力成为我这样的灵魂画师噢！！**哈哈哈哈哈啊哈哈哈哈哈哈**\n\n\n* 我是又吉君，一个集ruanpapa和灵魂画手与一身的大可爱！\n\n  <div align=center> \n\n  ![喵～](http://upload-images.jianshu.io/upload_images/5431890-086ab893f76633bf.jpg)\n\n  </div>\n\n<p align=\"center\"><font color=\"9E9E9E\"><u>喵~</u></font></p>\n\n<br>\n<br>\n<p align=\"right\">by：又吉君</p>","slug":"ruanpapa和又吉君的日常之三","published":1,"updated":"2017-04-11T02:13:47.000Z","_id":"cj1cw6rfa0002l53t95wzt1kf","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"ruanpapa和又吉君的日常之三\"><a href=\"#ruanpapa和又吉君的日常之三\" class=\"headerlink\" title=\"ruanpapa和又吉君的日常之三\"></a>ruanpapa和又吉君的日常之三</h2><blockquote>\n<p>前几天周末，我闲着没事画了一下水彩画。去年说要学一下水彩画，到今年才练了两次手˚✧₊⁎❝᷀ົཽ≀ˍ̮ ❝᷀ົཽ⁎⁺˳✧༚</p>\n<ul>\n<li><p><strong>骚逼</strong>    的秀一下：</p>\n</li>\n<li><p><img src=\"http://upload-images.jianshu.io/upload_images/5431890-edfdec991f26f35a.jpg\" alt=\"又吉君的第二次水彩\"></p>\n<p> ​</p>\n <p align=\"center\"><font color=\"9E9E9E\"><u>又吉君的第二次水彩</u></font></p>\n\n<p> <br></p>\n <p align=\"center\">（没有纸…拿的素描纸画的….）</p>\n\n<p>​</p>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"于是，ruanpapa叫我教他画画\"><a href=\"#于是，ruanpapa叫我教他画画\" class=\"headerlink\" title=\"于是，ruanpapa叫我教他画画\"></a>于是，ruanpapa叫我教他画画</h3><h3 id=\"哈哈哈哈哈哈哈哈哈\"><a href=\"#哈哈哈哈哈哈哈哈哈\" class=\"headerlink\" title=\"哈哈哈哈哈哈哈哈哈\"></a>哈哈哈哈哈哈哈哈哈</h3><ul>\n<li><p>我就让他自己先瞎画，随意涂鸦一下<br> <img src=\"http://upload-images.jianshu.io/upload_images/5431890-79043c46600a0f44.jpg\" alt=\"好奇的ruanpapa\"></p>\n <p align=\"center\"><font color=\"9E9E9E\"><u>好奇的ruanpapa</u></font></p>\n\n<p> <br></p>\n</li>\n<li><p>于是，我就给他做了个示范，在相册里随意选了几张图片，在微信里编辑起来了。<br> <strong>如下图：</strong><br> <img src=\"http://upload-images.jianshu.io/upload_images/5431890-b2e9236ecaf56952.jpg\" alt=\"又吉君有剧情的示范\"></p>\n <p align=\"center\"><font color=\"9E9E9E\"><u>又吉君有剧情的示范</u></font></p>\n\n<p> <br></p>\n</li>\n<li><p>然后……<strong>哈哈哈哈哈哈哈哈哈哈哈哈</strong>，他竟然画成这个样子！！！！！！！！太可爱了！！(〃ω〃)<br> <img src=\"http://upload-images.jianshu.io/upload_images/5431890-4964c7dac40f7e83.jpg\" alt=\"ruanpapa 的涂鸦\"></p>\n <p align=\"center\"><font color=\"9E9E9E\"><u>ruanpapa的涂鸦</u></font></p>\n\n<p> <br></p>\n</li>\n<li><p>哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈！！！！！！</p>\n</li>\n<li><p>虽然现在画风这么可爱，但是想想以后可能还会在博客里看到papa的进步噢！！！感觉棒棒的呢！！！(・ω・)ノ</p>\n</li>\n<li><p>papa你要努力成为我这样的灵魂画师噢！！<strong>哈哈哈哈哈啊哈哈哈哈哈哈</strong></p>\n</li>\n</ul>\n<ul>\n<li><p>我是又吉君，一个集ruanpapa和灵魂画手与一身的大可爱！</p>\n<div align=\"center\"><br><br><img src=\"http://upload-images.jianshu.io/upload_images/5431890-086ab893f76633bf.jpg\" alt=\"喵～\"><br><br></div>\n\n</li>\n</ul>\n<p align=\"center\"><font color=\"9E9E9E\"><u>喵~</u></font></p>\n\n<p><br><br><br></p>\n<p align=\"right\">by：又吉君</p>","excerpt":"","more":"<h2 id=\"ruanpapa和又吉君的日常之三\"><a href=\"#ruanpapa和又吉君的日常之三\" class=\"headerlink\" title=\"ruanpapa和又吉君的日常之三\"></a>ruanpapa和又吉君的日常之三</h2><blockquote>\n<p>前几天周末，我闲着没事画了一下水彩画。去年说要学一下水彩画，到今年才练了两次手˚✧₊⁎❝᷀ົཽ≀ˍ̮ ❝᷀ົཽ⁎⁺˳✧༚</p>\n<ul>\n<li><p><strong>骚逼</strong>    的秀一下：</p>\n</li>\n<li><p><img src=\"http://upload-images.jianshu.io/upload_images/5431890-edfdec991f26f35a.jpg\" alt=\"又吉君的第二次水彩\"></p>\n<p> ​</p>\n <p align=\"center\"><font color=\"9E9E9E\"><u>又吉君的第二次水彩</u></font></p>\n\n<p> <br></p>\n <p align=\"center\">（没有纸…拿的素描纸画的….）</p>\n\n<p>​</p>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"于是，ruanpapa叫我教他画画\"><a href=\"#于是，ruanpapa叫我教他画画\" class=\"headerlink\" title=\"于是，ruanpapa叫我教他画画\"></a>于是，ruanpapa叫我教他画画</h3><h3 id=\"哈哈哈哈哈哈哈哈哈\"><a href=\"#哈哈哈哈哈哈哈哈哈\" class=\"headerlink\" title=\"哈哈哈哈哈哈哈哈哈\"></a>哈哈哈哈哈哈哈哈哈</h3><ul>\n<li><p>我就让他自己先瞎画，随意涂鸦一下<br> <img src=\"http://upload-images.jianshu.io/upload_images/5431890-79043c46600a0f44.jpg\" alt=\"好奇的ruanpapa\"></p>\n <p align=\"center\"><font color=\"9E9E9E\"><u>好奇的ruanpapa</u></font></p>\n\n<p> <br></p>\n</li>\n<li><p>于是，我就给他做了个示范，在相册里随意选了几张图片，在微信里编辑起来了。<br> <strong>如下图：</strong><br> <img src=\"http://upload-images.jianshu.io/upload_images/5431890-b2e9236ecaf56952.jpg\" alt=\"又吉君有剧情的示范\"></p>\n <p align=\"center\"><font color=\"9E9E9E\"><u>又吉君有剧情的示范</u></font></p>\n\n<p> <br></p>\n</li>\n<li><p>然后……<strong>哈哈哈哈哈哈哈哈哈哈哈哈</strong>，他竟然画成这个样子！！！！！！！！太可爱了！！(〃ω〃)<br> <img src=\"http://upload-images.jianshu.io/upload_images/5431890-4964c7dac40f7e83.jpg\" alt=\"ruanpapa 的涂鸦\"></p>\n <p align=\"center\"><font color=\"9E9E9E\"><u>ruanpapa的涂鸦</u></font></p>\n\n<p> <br></p>\n</li>\n<li><p>哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈！！！！！！</p>\n</li>\n<li><p>虽然现在画风这么可爱，但是想想以后可能还会在博客里看到papa的进步噢！！！感觉棒棒的呢！！！(・ω・)ノ</p>\n</li>\n<li><p>papa你要努力成为我这样的灵魂画师噢！！<strong>哈哈哈哈哈啊哈哈哈哈哈哈</strong></p>\n</li>\n</ul>\n<ul>\n<li><p>我是又吉君，一个集ruanpapa和灵魂画手与一身的大可爱！</p>\n<div align=center><br><br><img src=\"http://upload-images.jianshu.io/upload_images/5431890-086ab893f76633bf.jpg\" alt=\"喵～\"><br><br></div>\n\n</li>\n</ul>\n<p align=\"center\"><font color=\"9E9E9E\"><u>喵~</u></font></p>\n\n<p><br><br><br></p>\n<p align=\"right\">by：又吉君</p>"},{"title":"PPRoundedAvatar--高性能的异步裁剪圆角头像控件","date":"2017-04-01T10:09:16.000Z","_content":"\n## 起因\n\n最近的开发任务是进行性能优化，主要是提升列表（UITableView）的滚动流畅性。  \n\n在完成了提前算高、子视图层级优化几个优化步骤之后，滚动的流畅性已经有了明显的提升，平均的帧速率（fps）已经从优化之前49提高到了55。接下来通过 Instruments 的 Time Profile 工具分析，发现圆角头像的裁剪竟然占去了20%+的用户运行时间！图片的处理需要 GPU 和 CPU 的配合，本来就需要大量的处理时间，这本无可厚非。但是这么重的任务都派发到主线程肯定是会造成界面的卡顿的，而且圆角头像在项目中的使用星罗棋布，很多界面中都用到了这个控件，所以呢，对圆角头像的优化就很有必要了。  \n\n\n\n## 经过\n优化性能，无非是将主线程从繁重的任务中解放出来，将能在后台线程完成的任务都派发到后台线程中。这里选用 NSOperation 进行多线程处理，因为 CoreGraphics 都是线程安全的，于是把图片处理（裁圆角/加边框）的过程都在后台线程中执行好，再在主线程设置图片。接下来说一下核心的技术点：\n\n### 图片处理\n我将图片裁剪的过程封装并暴露了两个便利接口，默认的 - (nullable UIImage *)pp_imageByRoundCornerRadius: scaleSize: 会先将图片缩放到scaleSize的大小，再添加上圆角（注意默认的方法是没有边框的），另一个接口 - (nullable UIImage *)pp_imageByRoundCornerRadius: scaleSize: borderWidth: borderColor: 则可以在默认方法的基础上设置边框颜色和边框的宽度。这里没有新建一个专门的处理类，而是拓展了 UIImage 类，具体的头文件如下：\n```objective-c\n@interface UIImage (PPRoundedAvatar)\n/**\n 将图片进行圆角处理，默认无边框\n */\n- (nullable UIImage *)pp_imageByRoundCornerRadius:(CGFloat)radius\n                                        scaleSize:(CGSize)newSize;\n\n/**\n 将图片进行圆角处理，并加上边框\n */\n- (nullable UIImage *)pp_imageByRoundCornerRadius:(CGFloat)radius\n                                        scaleSize:(CGSize)newSize\n                                      borderWidth:(CGFloat)borderWidth\n                                      borderColor:(nullable UIColor *)borderColor;\n\n/**\n 图片加上圆形边框，图片必须得是正方形的，否则直接返回未加边框的原图片\n */\n- (nullable UIImage *)pp_imageByRoundBorderedColor:(nullable UIColor *)color\n                                       borderWidth:(CGFloat)width;\n\n@end\n```\n图片进行圆角裁剪和加上边框主要还是采用 CoreGraphics 和 UIBezierPath 的方法，这里按下不表。值得注意的是处理的顺序应该是**先缩放图片，再进行裁剪**，不然边框的宽度会因为缩放而改变。\n```objective-c\n// 图片圆角裁剪\n- (UIImage *)pp_imageByRoundCornerRadius:(CGFloat)radius\n                             borderWidth:(CGFloat)borderWidth\n                             borderColor:(UIColor *)borderColor\n{\n    UIImage *scaledImage = [self pp_imageScaledAspectToFillSize:newSize];  // 缩放图片\n    UIGraphicsBeginImageContextWithOptions(scaledImage.size, NO, 0);\n    CGContextRef context = UIGraphicsGetCurrentContext();\n    CGRect rect = CGRectMake(0, 0, scaledImage.size.width, scaledImage.size.height);\n    CGContextScaleCTM(context, 1, -1);\n    CGContextTranslateCTM(context, 0, -rect.size.height);\n    \n    CGFloat minSize = MIN(scaledImage.size.width, scaledImage.size.height);\n    if (borderWidth < minSize / 2) {\n        UIBezierPath *path = [UIBezierPath bezierPathWithRoundedRect:CGRectInset(rect, borderWidth, borderWidth) byRoundingCorners:corners cornerRadii:CGSizeMake(radius, borderWidth)];\n        CGContextSaveGState(context);\n        [path addClip];\n        CGContextDrawImage(context, rect, scaledImage.CGImage);\n        CGContextRestoreGState(context);\n    }\n    \n    UIImage *image = UIGraphicsGetImageFromCurrentImageContext();\n    image = [image pp_imageByRoundBorderedColor:borderColor borderWidth:borderWidth];   \t// 加上边框\n    UIGraphicsEndImageContext();\n    return image;\n}\n\n// 图片加边框\n- (UIImage *)pp_imageByRoundBorderedColor:(UIColor *)borderColor\n                              borderWidth:(CGFloat)borderWidth\n{\n    if (self.size.height != self.size.width) {\n        return self;\n    }\n    \n    if (!borderColor || borderWidth > self.size.width / 2 || borderWidth < 0) {\n        return self;\n    }\n    \n    UIGraphicsBeginImageContextWithOptions(self.size, NO, 0);\n    [self drawAtPoint:CGPointZero];\n    CGRect rect = CGRectMake(0, 0, self.size.width, self.size.height);\n    CGFloat strokeInset = borderWidth / 2;\n    CGRect strokeRect = CGRectInset(rect, strokeInset, strokeInset);\n    CGFloat radius = self.size.width / 2;\n    UIBezierPath *path = [UIBezierPath bezierPathWithRoundedRect:strokeRect byRoundingCorners:UIRectCornerAllCorners cornerRadii:CGSizeMake(radius, borderWidth)];\n    path.lineWidth = borderWidth;\n    [borderColor setStroke];\n    [path stroke];\n    UIImage *result = UIGraphicsGetImageFromCurrentImageContext();\n    UIGraphicsEndImageContext();\n    return result;\n}\n```\n\n### 圆角头像控件\n这里采用 NSOperation + NSOperationQueue 的方式进行多线程处理，在图片、边框等属性的 set 方法里调用 setNeedsLayout 方法刷新布局，同时设置 _isNeedTransform 标记位为 YES，表示需要刷新，可以提高性能。\n```objective-c\n- (void)setAvatarImage:(UIImage *)avatarImage\n{\n    if (_avatarImage != avatarImage) {\n        _avatarImage = avatarImage;\n        \n        _isNeedTransform = YES;      // 需要刷新的标识\n        [self setNeedsLayout];\n    }\n}\n\n- (void)setBorderHidden:(BOOL)borderHidden\n{\n    if (_borderHidden != borderHidden) {\n        _borderHidden = borderHidden;\n        \n        _isNeedTransform = YES;\t\t// 需要刷新的标识\n        [self setNeedsLayout];\n    }\n}\n\n+ (NSOperationQueue *)sharedTransformQueue\n{\n    static NSOperationQueue *transformQueue;\n    static dispatch_once_t onceToken;\n    dispatch_once(&onceToken, ^{\n        transformQueue = [[NSOperationQueue alloc] init];\n        transformQueue.name = @\"io.github.vernonvan.PPRoundedAvatar.sharedOperationQueue\";\n        transformQueue.maxConcurrentOperationCount = 20;\n    });\n    return transformQueue;\n}\n\n- (void)layoutSubviews\n{\n    [super layoutSubviews];\n    \n    if (!self.avatarImage && !self.imageBackgroundColor) {\n        return;\n    }\n    \n    if (self.bounds.size.width <= 0 || self.bounds.size.height <= 0) {\n        return;\n    }\n\n    if (_isNeedTransform || !CGSizeEqualToSize(self.bounds.size, self.imageView.image.size)) {\n        [self transformImage];\n    }\n}\n\n- (void)transformImage\n{\n    UIImage *startImage = self.avatarImage;\n    \n    NSBlockOperation *transformOperation = [[NSBlockOperation alloc] init];\n    __weak NSBlockOperation *weakTransformOperation = transformOperation;\n    [transformOperation addExecutionBlock:^{\n        NSBlockOperation *strongTransformOperation = weakTransformOperation;\n        \n        if ([strongTransformOperation isCancelled]) {\n            return;\n        }\n        \n        UIImage *transformedImage = nil;\n        if (self.avatarImage) {\n            transformedImage = [self.avatarImage pp_imageByRoundCornerRadius:self.bounds.size.width scaleSize:self.bounds.size];\n        } else if (self.imageBackgroundColor) {\n            transformedImage = [UIImage pp_roundImageWithColor:self.imageBackgroundColor radius:self.bounds.size.width / 2];\n        }\n        \n        if (!self.borderHidden) {\n            transformedImage = [transformedImage pp_imageByRoundBorderedColor:self.borderColor borderWidth:self.borderWidth];\n        }\n        \n        dispatch_async(dispatch_get_main_queue(), ^{\n            if ([strongTransformOperation isCancelled]) {\n                return;\n            }\n            if (self.avatarImage == startImage) {  // 1\n                _isNeedTransform = NO;\n                [self setImage:transformedImage forState:UIControlStateNormal];\n            }\n        });\n    }];\n    \n    [[self.class sharedTransformQueue] addOperation:transformOperation];\n}\n```\n在上面有一个标注了1的注释点，这里的条件判断是为了避免多线程时序性的问题而加的。考虑这样的一种常见情况：圆角头像控件是表格上的单元格（cell）上的子视图，某个 cell 被滑到屏幕上，于是开始头像的裁剪（这里将这个头像称为旧头像），然后在这个裁剪尚未完成的时候，这个 cell 被滑出了屏幕，然后根据新的图片裁剪圆角（这个头像称为新头像），可能出现新头像裁剪早于旧头像完成的情况，就会导致控件先设置头像为新头像，然后被慢悠悠才完成裁剪的旧头像覆盖的问题。所以这里用这个条件避免这个问题。\n\n\n\n## 结果\n将上述的操作都封装隐藏好，现在的圆角头像控件 **PPRoundedAvatar** 的使用就很简单了，\n```objective-c\nPPRoundedAvatar *avatar = [[PPRoundedAvatar alloc] initWithFrame:CGRectMake(0, 0, 100, 100)];\navatar.avatarImage = [UIImage imageNamed:@\"example.png\"];       // 头像图片\navatar.borderWidth = 1.0;                                       // 边框宽度\navatar.borderColor = UIColor.blackColor;                        // 边框颜色\navatar.borderHidden = NO;                                       // 显示边框\navatar.imageBackgroundColor = UIColor.grayColor;                // 背景颜色\n[self.view addSubview:avatar];\n```\n具体的代码已经丢到了 [github](https://github.com/VernonVan/PPRoundedAvatar) 上了，同时支持 Cocoapods 导入项目。\n有需要的可以 clone 进行使用，也欢迎 pull request 完善这个控件。\n\n\n\n## 插叙\n技术上的问题就说到了这里，可是做一个开源项目不仅在技术上需要反复斟酌，而且在 github 的展示、demo 的展示等地方都需要有界面的设计，可苦了我这直男审美....../(ㄒoㄒ)/~~\n这也导致了我家又吉君实在是看不下去了，终于勇敢地站了出来帮我把界面的设计给做好了，当中的你来我往又是另外的[故事](https://vernonvan.github.io/2017/04/01/ruanpapa%E5%92%8C%E5%8F%88%E5%90%89%E5%90%9B%E7%9A%84%E6%97%A5%E5%B8%B8%E4%B9%8B%E4%B8%80/)。真的是对我家又吉君感激涕零~~~\n呐，又吉君，你帮我画一辈子设计好不好吖，我带你去吃鸡锁骨、卷饼、酱香饼、枣糕还有烤冷面哦~哈哈哈哈啊哈哈哈","source":"_posts/PPRoundedAvatar-高性能的异步裁剪圆角头像控件.md","raw":"---\ntitle: PPRoundedAvatar--高性能的异步裁剪圆角头像控件\ndate: 2017-04-01 18:09:16\ntags:\n- iOS\n- Objective-C\ncategories:\n- ruanpapa--技术贴\n---\n\n## 起因\n\n最近的开发任务是进行性能优化，主要是提升列表（UITableView）的滚动流畅性。  \n\n在完成了提前算高、子视图层级优化几个优化步骤之后，滚动的流畅性已经有了明显的提升，平均的帧速率（fps）已经从优化之前49提高到了55。接下来通过 Instruments 的 Time Profile 工具分析，发现圆角头像的裁剪竟然占去了20%+的用户运行时间！图片的处理需要 GPU 和 CPU 的配合，本来就需要大量的处理时间，这本无可厚非。但是这么重的任务都派发到主线程肯定是会造成界面的卡顿的，而且圆角头像在项目中的使用星罗棋布，很多界面中都用到了这个控件，所以呢，对圆角头像的优化就很有必要了。  \n\n\n\n## 经过\n优化性能，无非是将主线程从繁重的任务中解放出来，将能在后台线程完成的任务都派发到后台线程中。这里选用 NSOperation 进行多线程处理，因为 CoreGraphics 都是线程安全的，于是把图片处理（裁圆角/加边框）的过程都在后台线程中执行好，再在主线程设置图片。接下来说一下核心的技术点：\n\n### 图片处理\n我将图片裁剪的过程封装并暴露了两个便利接口，默认的 - (nullable UIImage *)pp_imageByRoundCornerRadius: scaleSize: 会先将图片缩放到scaleSize的大小，再添加上圆角（注意默认的方法是没有边框的），另一个接口 - (nullable UIImage *)pp_imageByRoundCornerRadius: scaleSize: borderWidth: borderColor: 则可以在默认方法的基础上设置边框颜色和边框的宽度。这里没有新建一个专门的处理类，而是拓展了 UIImage 类，具体的头文件如下：\n```objective-c\n@interface UIImage (PPRoundedAvatar)\n/**\n 将图片进行圆角处理，默认无边框\n */\n- (nullable UIImage *)pp_imageByRoundCornerRadius:(CGFloat)radius\n                                        scaleSize:(CGSize)newSize;\n\n/**\n 将图片进行圆角处理，并加上边框\n */\n- (nullable UIImage *)pp_imageByRoundCornerRadius:(CGFloat)radius\n                                        scaleSize:(CGSize)newSize\n                                      borderWidth:(CGFloat)borderWidth\n                                      borderColor:(nullable UIColor *)borderColor;\n\n/**\n 图片加上圆形边框，图片必须得是正方形的，否则直接返回未加边框的原图片\n */\n- (nullable UIImage *)pp_imageByRoundBorderedColor:(nullable UIColor *)color\n                                       borderWidth:(CGFloat)width;\n\n@end\n```\n图片进行圆角裁剪和加上边框主要还是采用 CoreGraphics 和 UIBezierPath 的方法，这里按下不表。值得注意的是处理的顺序应该是**先缩放图片，再进行裁剪**，不然边框的宽度会因为缩放而改变。\n```objective-c\n// 图片圆角裁剪\n- (UIImage *)pp_imageByRoundCornerRadius:(CGFloat)radius\n                             borderWidth:(CGFloat)borderWidth\n                             borderColor:(UIColor *)borderColor\n{\n    UIImage *scaledImage = [self pp_imageScaledAspectToFillSize:newSize];  // 缩放图片\n    UIGraphicsBeginImageContextWithOptions(scaledImage.size, NO, 0);\n    CGContextRef context = UIGraphicsGetCurrentContext();\n    CGRect rect = CGRectMake(0, 0, scaledImage.size.width, scaledImage.size.height);\n    CGContextScaleCTM(context, 1, -1);\n    CGContextTranslateCTM(context, 0, -rect.size.height);\n    \n    CGFloat minSize = MIN(scaledImage.size.width, scaledImage.size.height);\n    if (borderWidth < minSize / 2) {\n        UIBezierPath *path = [UIBezierPath bezierPathWithRoundedRect:CGRectInset(rect, borderWidth, borderWidth) byRoundingCorners:corners cornerRadii:CGSizeMake(radius, borderWidth)];\n        CGContextSaveGState(context);\n        [path addClip];\n        CGContextDrawImage(context, rect, scaledImage.CGImage);\n        CGContextRestoreGState(context);\n    }\n    \n    UIImage *image = UIGraphicsGetImageFromCurrentImageContext();\n    image = [image pp_imageByRoundBorderedColor:borderColor borderWidth:borderWidth];   \t// 加上边框\n    UIGraphicsEndImageContext();\n    return image;\n}\n\n// 图片加边框\n- (UIImage *)pp_imageByRoundBorderedColor:(UIColor *)borderColor\n                              borderWidth:(CGFloat)borderWidth\n{\n    if (self.size.height != self.size.width) {\n        return self;\n    }\n    \n    if (!borderColor || borderWidth > self.size.width / 2 || borderWidth < 0) {\n        return self;\n    }\n    \n    UIGraphicsBeginImageContextWithOptions(self.size, NO, 0);\n    [self drawAtPoint:CGPointZero];\n    CGRect rect = CGRectMake(0, 0, self.size.width, self.size.height);\n    CGFloat strokeInset = borderWidth / 2;\n    CGRect strokeRect = CGRectInset(rect, strokeInset, strokeInset);\n    CGFloat radius = self.size.width / 2;\n    UIBezierPath *path = [UIBezierPath bezierPathWithRoundedRect:strokeRect byRoundingCorners:UIRectCornerAllCorners cornerRadii:CGSizeMake(radius, borderWidth)];\n    path.lineWidth = borderWidth;\n    [borderColor setStroke];\n    [path stroke];\n    UIImage *result = UIGraphicsGetImageFromCurrentImageContext();\n    UIGraphicsEndImageContext();\n    return result;\n}\n```\n\n### 圆角头像控件\n这里采用 NSOperation + NSOperationQueue 的方式进行多线程处理，在图片、边框等属性的 set 方法里调用 setNeedsLayout 方法刷新布局，同时设置 _isNeedTransform 标记位为 YES，表示需要刷新，可以提高性能。\n```objective-c\n- (void)setAvatarImage:(UIImage *)avatarImage\n{\n    if (_avatarImage != avatarImage) {\n        _avatarImage = avatarImage;\n        \n        _isNeedTransform = YES;      // 需要刷新的标识\n        [self setNeedsLayout];\n    }\n}\n\n- (void)setBorderHidden:(BOOL)borderHidden\n{\n    if (_borderHidden != borderHidden) {\n        _borderHidden = borderHidden;\n        \n        _isNeedTransform = YES;\t\t// 需要刷新的标识\n        [self setNeedsLayout];\n    }\n}\n\n+ (NSOperationQueue *)sharedTransformQueue\n{\n    static NSOperationQueue *transformQueue;\n    static dispatch_once_t onceToken;\n    dispatch_once(&onceToken, ^{\n        transformQueue = [[NSOperationQueue alloc] init];\n        transformQueue.name = @\"io.github.vernonvan.PPRoundedAvatar.sharedOperationQueue\";\n        transformQueue.maxConcurrentOperationCount = 20;\n    });\n    return transformQueue;\n}\n\n- (void)layoutSubviews\n{\n    [super layoutSubviews];\n    \n    if (!self.avatarImage && !self.imageBackgroundColor) {\n        return;\n    }\n    \n    if (self.bounds.size.width <= 0 || self.bounds.size.height <= 0) {\n        return;\n    }\n\n    if (_isNeedTransform || !CGSizeEqualToSize(self.bounds.size, self.imageView.image.size)) {\n        [self transformImage];\n    }\n}\n\n- (void)transformImage\n{\n    UIImage *startImage = self.avatarImage;\n    \n    NSBlockOperation *transformOperation = [[NSBlockOperation alloc] init];\n    __weak NSBlockOperation *weakTransformOperation = transformOperation;\n    [transformOperation addExecutionBlock:^{\n        NSBlockOperation *strongTransformOperation = weakTransformOperation;\n        \n        if ([strongTransformOperation isCancelled]) {\n            return;\n        }\n        \n        UIImage *transformedImage = nil;\n        if (self.avatarImage) {\n            transformedImage = [self.avatarImage pp_imageByRoundCornerRadius:self.bounds.size.width scaleSize:self.bounds.size];\n        } else if (self.imageBackgroundColor) {\n            transformedImage = [UIImage pp_roundImageWithColor:self.imageBackgroundColor radius:self.bounds.size.width / 2];\n        }\n        \n        if (!self.borderHidden) {\n            transformedImage = [transformedImage pp_imageByRoundBorderedColor:self.borderColor borderWidth:self.borderWidth];\n        }\n        \n        dispatch_async(dispatch_get_main_queue(), ^{\n            if ([strongTransformOperation isCancelled]) {\n                return;\n            }\n            if (self.avatarImage == startImage) {  // 1\n                _isNeedTransform = NO;\n                [self setImage:transformedImage forState:UIControlStateNormal];\n            }\n        });\n    }];\n    \n    [[self.class sharedTransformQueue] addOperation:transformOperation];\n}\n```\n在上面有一个标注了1的注释点，这里的条件判断是为了避免多线程时序性的问题而加的。考虑这样的一种常见情况：圆角头像控件是表格上的单元格（cell）上的子视图，某个 cell 被滑到屏幕上，于是开始头像的裁剪（这里将这个头像称为旧头像），然后在这个裁剪尚未完成的时候，这个 cell 被滑出了屏幕，然后根据新的图片裁剪圆角（这个头像称为新头像），可能出现新头像裁剪早于旧头像完成的情况，就会导致控件先设置头像为新头像，然后被慢悠悠才完成裁剪的旧头像覆盖的问题。所以这里用这个条件避免这个问题。\n\n\n\n## 结果\n将上述的操作都封装隐藏好，现在的圆角头像控件 **PPRoundedAvatar** 的使用就很简单了，\n```objective-c\nPPRoundedAvatar *avatar = [[PPRoundedAvatar alloc] initWithFrame:CGRectMake(0, 0, 100, 100)];\navatar.avatarImage = [UIImage imageNamed:@\"example.png\"];       // 头像图片\navatar.borderWidth = 1.0;                                       // 边框宽度\navatar.borderColor = UIColor.blackColor;                        // 边框颜色\navatar.borderHidden = NO;                                       // 显示边框\navatar.imageBackgroundColor = UIColor.grayColor;                // 背景颜色\n[self.view addSubview:avatar];\n```\n具体的代码已经丢到了 [github](https://github.com/VernonVan/PPRoundedAvatar) 上了，同时支持 Cocoapods 导入项目。\n有需要的可以 clone 进行使用，也欢迎 pull request 完善这个控件。\n\n\n\n## 插叙\n技术上的问题就说到了这里，可是做一个开源项目不仅在技术上需要反复斟酌，而且在 github 的展示、demo 的展示等地方都需要有界面的设计，可苦了我这直男审美....../(ㄒoㄒ)/~~\n这也导致了我家又吉君实在是看不下去了，终于勇敢地站了出来帮我把界面的设计给做好了，当中的你来我往又是另外的[故事](https://vernonvan.github.io/2017/04/01/ruanpapa%E5%92%8C%E5%8F%88%E5%90%89%E5%90%9B%E7%9A%84%E6%97%A5%E5%B8%B8%E4%B9%8B%E4%B8%80/)。真的是对我家又吉君感激涕零~~~\n呐，又吉君，你帮我画一辈子设计好不好吖，我带你去吃鸡锁骨、卷饼、酱香饼、枣糕还有烤冷面哦~哈哈哈哈啊哈哈哈","slug":"PPRoundedAvatar-高性能的异步裁剪圆角头像控件","published":1,"updated":"2017-04-05T11:21:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1cw6rff0004l53tw77ft7b2","content":"<h2 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h2><p>最近的开发任务是进行性能优化，主要是提升列表（UITableView）的滚动流畅性。  </p>\n<p>在完成了提前算高、子视图层级优化几个优化步骤之后，滚动的流畅性已经有了明显的提升，平均的帧速率（fps）已经从优化之前49提高到了55。接下来通过 Instruments 的 Time Profile 工具分析，发现圆角头像的裁剪竟然占去了20%+的用户运行时间！图片的处理需要 GPU 和 CPU 的配合，本来就需要大量的处理时间，这本无可厚非。但是这么重的任务都派发到主线程肯定是会造成界面的卡顿的，而且圆角头像在项目中的使用星罗棋布，很多界面中都用到了这个控件，所以呢，对圆角头像的优化就很有必要了。  </p>\n<h2 id=\"经过\"><a href=\"#经过\" class=\"headerlink\" title=\"经过\"></a>经过</h2><p>优化性能，无非是将主线程从繁重的任务中解放出来，将能在后台线程完成的任务都派发到后台线程中。这里选用 NSOperation 进行多线程处理，因为 CoreGraphics 都是线程安全的，于是把图片处理（裁圆角/加边框）的过程都在后台线程中执行好，再在主线程设置图片。接下来说一下核心的技术点：</p>\n<h3 id=\"图片处理\"><a href=\"#图片处理\" class=\"headerlink\" title=\"图片处理\"></a>图片处理</h3><p>我将图片裁剪的过程封装并暴露了两个便利接口，默认的 - (nullable UIImage <em>)pp_imageByRoundCornerRadius: scaleSize: 会先将图片缩放到scaleSize的大小，再添加上圆角（注意默认的方法是没有边框的），另一个接口 - (nullable UIImage </em>)pp_imageByRoundCornerRadius: scaleSize: borderWidth: borderColor: 则可以在默认方法的基础上设置边框颜色和边框的宽度。这里没有新建一个专门的处理类，而是拓展了 UIImage 类，具体的头文件如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">@interface UIImage (PPRoundedAvatar)</div><div class=\"line\">/**</div><div class=\"line\"> 将图片进行圆角处理，默认无边框</div><div class=\"line\"> */</div><div class=\"line\">- (nullable UIImage *)pp_imageByRoundCornerRadius:(CGFloat)radius</div><div class=\"line\">                                        scaleSize:(CGSize)newSize;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> 将图片进行圆角处理，并加上边框</div><div class=\"line\"> */</div><div class=\"line\">- (nullable UIImage *)pp_imageByRoundCornerRadius:(CGFloat)radius</div><div class=\"line\">                                        scaleSize:(CGSize)newSize</div><div class=\"line\">                                      borderWidth:(CGFloat)borderWidth</div><div class=\"line\">                                      borderColor:(nullable UIColor *)borderColor;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> 图片加上圆形边框，图片必须得是正方形的，否则直接返回未加边框的原图片</div><div class=\"line\"> */</div><div class=\"line\">- (nullable UIImage *)pp_imageByRoundBorderedColor:(nullable UIColor *)color</div><div class=\"line\">                                       borderWidth:(CGFloat)width;</div><div class=\"line\"></div><div class=\"line\">@end</div></pre></td></tr></table></figure></p>\n<p>图片进行圆角裁剪和加上边框主要还是采用 CoreGraphics 和 UIBezierPath 的方法，这里按下不表。值得注意的是处理的顺序应该是<strong>先缩放图片，再进行裁剪</strong>，不然边框的宽度会因为缩放而改变。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 图片圆角裁剪</div><div class=\"line\">- (UIImage *)pp_imageByRoundCornerRadius:(CGFloat)radius</div><div class=\"line\">                             borderWidth:(CGFloat)borderWidth</div><div class=\"line\">                             borderColor:(UIColor *)borderColor</div><div class=\"line\">&#123;</div><div class=\"line\">    UIImage *scaledImage = [self pp_imageScaledAspectToFillSize:newSize];  // 缩放图片</div><div class=\"line\">    UIGraphicsBeginImageContextWithOptions(scaledImage.size, NO, 0);</div><div class=\"line\">    CGContextRef context = UIGraphicsGetCurrentContext();</div><div class=\"line\">    CGRect rect = CGRectMake(0, 0, scaledImage.size.width, scaledImage.size.height);</div><div class=\"line\">    CGContextScaleCTM(context, 1, -1);</div><div class=\"line\">    CGContextTranslateCTM(context, 0, -rect.size.height);</div><div class=\"line\">    </div><div class=\"line\">    CGFloat minSize = MIN(scaledImage.size.width, scaledImage.size.height);</div><div class=\"line\">    if (borderWidth &lt; minSize / 2) &#123;</div><div class=\"line\">        UIBezierPath *path = [UIBezierPath bezierPathWithRoundedRect:CGRectInset(rect, borderWidth, borderWidth) byRoundingCorners:corners cornerRadii:CGSizeMake(radius, borderWidth)];</div><div class=\"line\">        CGContextSaveGState(context);</div><div class=\"line\">        [path addClip];</div><div class=\"line\">        CGContextDrawImage(context, rect, scaledImage.CGImage);</div><div class=\"line\">        CGContextRestoreGState(context);</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    UIImage *image = UIGraphicsGetImageFromCurrentImageContext();</div><div class=\"line\">    image = [image pp_imageByRoundBorderedColor:borderColor borderWidth:borderWidth];   \t// 加上边框</div><div class=\"line\">    UIGraphicsEndImageContext();</div><div class=\"line\">    return image;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">// 图片加边框</div><div class=\"line\">- (UIImage *)pp_imageByRoundBorderedColor:(UIColor *)borderColor</div><div class=\"line\">                              borderWidth:(CGFloat)borderWidth</div><div class=\"line\">&#123;</div><div class=\"line\">    if (self.size.height != self.size.width) &#123;</div><div class=\"line\">        return self;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    if (!borderColor || borderWidth &gt; self.size.width / 2 || borderWidth &lt; 0) &#123;</div><div class=\"line\">        return self;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    UIGraphicsBeginImageContextWithOptions(self.size, NO, 0);</div><div class=\"line\">    [self drawAtPoint:CGPointZero];</div><div class=\"line\">    CGRect rect = CGRectMake(0, 0, self.size.width, self.size.height);</div><div class=\"line\">    CGFloat strokeInset = borderWidth / 2;</div><div class=\"line\">    CGRect strokeRect = CGRectInset(rect, strokeInset, strokeInset);</div><div class=\"line\">    CGFloat radius = self.size.width / 2;</div><div class=\"line\">    UIBezierPath *path = [UIBezierPath bezierPathWithRoundedRect:strokeRect byRoundingCorners:UIRectCornerAllCorners cornerRadii:CGSizeMake(radius, borderWidth)];</div><div class=\"line\">    path.lineWidth = borderWidth;</div><div class=\"line\">    [borderColor setStroke];</div><div class=\"line\">    [path stroke];</div><div class=\"line\">    UIImage *result = UIGraphicsGetImageFromCurrentImageContext();</div><div class=\"line\">    UIGraphicsEndImageContext();</div><div class=\"line\">    return result;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"圆角头像控件\"><a href=\"#圆角头像控件\" class=\"headerlink\" title=\"圆角头像控件\"></a>圆角头像控件</h3><p>这里采用 NSOperation + NSOperationQueue 的方式进行多线程处理，在图片、边框等属性的 set 方法里调用 setNeedsLayout 方法刷新布局，同时设置 _isNeedTransform 标记位为 YES，表示需要刷新，可以提高性能。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (void)setAvatarImage:(UIImage *)avatarImage</div><div class=\"line\">&#123;</div><div class=\"line\">    if (_avatarImage != avatarImage) &#123;</div><div class=\"line\">        _avatarImage = avatarImage;</div><div class=\"line\">        </div><div class=\"line\">        _isNeedTransform = YES;      // 需要刷新的标识</div><div class=\"line\">        [self setNeedsLayout];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (void)setBorderHidden:(BOOL)borderHidden</div><div class=\"line\">&#123;</div><div class=\"line\">    if (_borderHidden != borderHidden) &#123;</div><div class=\"line\">        _borderHidden = borderHidden;</div><div class=\"line\">        </div><div class=\"line\">        _isNeedTransform = YES;\t\t// 需要刷新的标识</div><div class=\"line\">        [self setNeedsLayout];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">+ (NSOperationQueue *)sharedTransformQueue</div><div class=\"line\">&#123;</div><div class=\"line\">    static NSOperationQueue *transformQueue;</div><div class=\"line\">    static dispatch_once_t onceToken;</div><div class=\"line\">    dispatch_once(&amp;onceToken, ^&#123;</div><div class=\"line\">        transformQueue = [[NSOperationQueue alloc] init];</div><div class=\"line\">        transformQueue.name = @&quot;io.github.vernonvan.PPRoundedAvatar.sharedOperationQueue&quot;;</div><div class=\"line\">        transformQueue.maxConcurrentOperationCount = 20;</div><div class=\"line\">    &#125;);</div><div class=\"line\">    return transformQueue;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (void)layoutSubviews</div><div class=\"line\">&#123;</div><div class=\"line\">    [super layoutSubviews];</div><div class=\"line\">    </div><div class=\"line\">    if (!self.avatarImage &amp;&amp; !self.imageBackgroundColor) &#123;</div><div class=\"line\">        return;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    if (self.bounds.size.width &lt;= 0 || self.bounds.size.height &lt;= 0) &#123;</div><div class=\"line\">        return;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    if (_isNeedTransform || !CGSizeEqualToSize(self.bounds.size, self.imageView.image.size)) &#123;</div><div class=\"line\">        [self transformImage];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (void)transformImage</div><div class=\"line\">&#123;</div><div class=\"line\">    UIImage *startImage = self.avatarImage;</div><div class=\"line\">    </div><div class=\"line\">    NSBlockOperation *transformOperation = [[NSBlockOperation alloc] init];</div><div class=\"line\">    __weak NSBlockOperation *weakTransformOperation = transformOperation;</div><div class=\"line\">    [transformOperation addExecutionBlock:^&#123;</div><div class=\"line\">        NSBlockOperation *strongTransformOperation = weakTransformOperation;</div><div class=\"line\">        </div><div class=\"line\">        if ([strongTransformOperation isCancelled]) &#123;</div><div class=\"line\">            return;</div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">        UIImage *transformedImage = nil;</div><div class=\"line\">        if (self.avatarImage) &#123;</div><div class=\"line\">            transformedImage = [self.avatarImage pp_imageByRoundCornerRadius:self.bounds.size.width scaleSize:self.bounds.size];</div><div class=\"line\">        &#125; else if (self.imageBackgroundColor) &#123;</div><div class=\"line\">            transformedImage = [UIImage pp_roundImageWithColor:self.imageBackgroundColor radius:self.bounds.size.width / 2];</div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">        if (!self.borderHidden) &#123;</div><div class=\"line\">            transformedImage = [transformedImage pp_imageByRoundBorderedColor:self.borderColor borderWidth:self.borderWidth];</div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">        dispatch_async(dispatch_get_main_queue(), ^&#123;</div><div class=\"line\">            if ([strongTransformOperation isCancelled]) &#123;</div><div class=\"line\">                return;</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (self.avatarImage == startImage) &#123;  // 1</div><div class=\"line\">                _isNeedTransform = NO;</div><div class=\"line\">                [self setImage:transformedImage forState:UIControlStateNormal];</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;];</div><div class=\"line\">    </div><div class=\"line\">    [[self.class sharedTransformQueue] addOperation:transformOperation];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在上面有一个标注了1的注释点，这里的条件判断是为了避免多线程时序性的问题而加的。考虑这样的一种常见情况：圆角头像控件是表格上的单元格（cell）上的子视图，某个 cell 被滑到屏幕上，于是开始头像的裁剪（这里将这个头像称为旧头像），然后在这个裁剪尚未完成的时候，这个 cell 被滑出了屏幕，然后根据新的图片裁剪圆角（这个头像称为新头像），可能出现新头像裁剪早于旧头像完成的情况，就会导致控件先设置头像为新头像，然后被慢悠悠才完成裁剪的旧头像覆盖的问题。所以这里用这个条件避免这个问题。</p>\n<h2 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h2><p>将上述的操作都封装隐藏好，现在的圆角头像控件 <strong>PPRoundedAvatar</strong> 的使用就很简单了，<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">PPRoundedAvatar *avatar = [[PPRoundedAvatar alloc] initWithFrame:CGRectMake(0, 0, 100, 100)];</div><div class=\"line\">avatar.avatarImage = [UIImage imageNamed:@&quot;example.png&quot;];       // 头像图片</div><div class=\"line\">avatar.borderWidth = 1.0;                                       // 边框宽度</div><div class=\"line\">avatar.borderColor = UIColor.blackColor;                        // 边框颜色</div><div class=\"line\">avatar.borderHidden = NO;                                       // 显示边框</div><div class=\"line\">avatar.imageBackgroundColor = UIColor.grayColor;                // 背景颜色</div><div class=\"line\">[self.view addSubview:avatar];</div></pre></td></tr></table></figure></p>\n<p>具体的代码已经丢到了 <a href=\"https://github.com/VernonVan/PPRoundedAvatar\" target=\"_blank\" rel=\"external\">github</a> 上了，同时支持 Cocoapods 导入项目。<br>有需要的可以 clone 进行使用，也欢迎 pull request 完善这个控件。</p>\n<h2 id=\"插叙\"><a href=\"#插叙\" class=\"headerlink\" title=\"插叙\"></a>插叙</h2><p>技术上的问题就说到了这里，可是做一个开源项目不仅在技术上需要反复斟酌，而且在 github 的展示、demo 的展示等地方都需要有界面的设计，可苦了我这直男审美……/(ㄒoㄒ)/~~<br>这也导致了我家又吉君实在是看不下去了，终于勇敢地站了出来帮我把界面的设计给做好了，当中的你来我往又是另外的<a href=\"https://vernonvan.github.io/2017/04/01/ruanpapa%E5%92%8C%E5%8F%88%E5%90%89%E5%90%9B%E7%9A%84%E6%97%A5%E5%B8%B8%E4%B9%8B%E4%B8%80/\" target=\"_blank\" rel=\"external\">故事</a>。真的是对我家又吉君感激涕零~~~<br>呐，又吉君，你帮我画一辈子设计好不好吖，我带你去吃鸡锁骨、卷饼、酱香饼、枣糕还有烤冷面哦~哈哈哈哈啊哈哈哈</p>\n","excerpt":"","more":"<h2 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h2><p>最近的开发任务是进行性能优化，主要是提升列表（UITableView）的滚动流畅性。  </p>\n<p>在完成了提前算高、子视图层级优化几个优化步骤之后，滚动的流畅性已经有了明显的提升，平均的帧速率（fps）已经从优化之前49提高到了55。接下来通过 Instruments 的 Time Profile 工具分析，发现圆角头像的裁剪竟然占去了20%+的用户运行时间！图片的处理需要 GPU 和 CPU 的配合，本来就需要大量的处理时间，这本无可厚非。但是这么重的任务都派发到主线程肯定是会造成界面的卡顿的，而且圆角头像在项目中的使用星罗棋布，很多界面中都用到了这个控件，所以呢，对圆角头像的优化就很有必要了。  </p>\n<h2 id=\"经过\"><a href=\"#经过\" class=\"headerlink\" title=\"经过\"></a>经过</h2><p>优化性能，无非是将主线程从繁重的任务中解放出来，将能在后台线程完成的任务都派发到后台线程中。这里选用 NSOperation 进行多线程处理，因为 CoreGraphics 都是线程安全的，于是把图片处理（裁圆角/加边框）的过程都在后台线程中执行好，再在主线程设置图片。接下来说一下核心的技术点：</p>\n<h3 id=\"图片处理\"><a href=\"#图片处理\" class=\"headerlink\" title=\"图片处理\"></a>图片处理</h3><p>我将图片裁剪的过程封装并暴露了两个便利接口，默认的 - (nullable UIImage <em>)pp_imageByRoundCornerRadius: scaleSize: 会先将图片缩放到scaleSize的大小，再添加上圆角（注意默认的方法是没有边框的），另一个接口 - (nullable UIImage </em>)pp_imageByRoundCornerRadius: scaleSize: borderWidth: borderColor: 则可以在默认方法的基础上设置边框颜色和边框的宽度。这里没有新建一个专门的处理类，而是拓展了 UIImage 类，具体的头文件如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">@interface UIImage (PPRoundedAvatar)</div><div class=\"line\">/**</div><div class=\"line\"> 将图片进行圆角处理，默认无边框</div><div class=\"line\"> */</div><div class=\"line\">- (nullable UIImage *)pp_imageByRoundCornerRadius:(CGFloat)radius</div><div class=\"line\">                                        scaleSize:(CGSize)newSize;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> 将图片进行圆角处理，并加上边框</div><div class=\"line\"> */</div><div class=\"line\">- (nullable UIImage *)pp_imageByRoundCornerRadius:(CGFloat)radius</div><div class=\"line\">                                        scaleSize:(CGSize)newSize</div><div class=\"line\">                                      borderWidth:(CGFloat)borderWidth</div><div class=\"line\">                                      borderColor:(nullable UIColor *)borderColor;</div><div class=\"line\"></div><div class=\"line\">/**</div><div class=\"line\"> 图片加上圆形边框，图片必须得是正方形的，否则直接返回未加边框的原图片</div><div class=\"line\"> */</div><div class=\"line\">- (nullable UIImage *)pp_imageByRoundBorderedColor:(nullable UIColor *)color</div><div class=\"line\">                                       borderWidth:(CGFloat)width;</div><div class=\"line\"></div><div class=\"line\">@end</div></pre></td></tr></table></figure></p>\n<p>图片进行圆角裁剪和加上边框主要还是采用 CoreGraphics 和 UIBezierPath 的方法，这里按下不表。值得注意的是处理的顺序应该是<strong>先缩放图片，再进行裁剪</strong>，不然边框的宽度会因为缩放而改变。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 图片圆角裁剪</div><div class=\"line\">- (UIImage *)pp_imageByRoundCornerRadius:(CGFloat)radius</div><div class=\"line\">                             borderWidth:(CGFloat)borderWidth</div><div class=\"line\">                             borderColor:(UIColor *)borderColor</div><div class=\"line\">&#123;</div><div class=\"line\">    UIImage *scaledImage = [self pp_imageScaledAspectToFillSize:newSize];  // 缩放图片</div><div class=\"line\">    UIGraphicsBeginImageContextWithOptions(scaledImage.size, NO, 0);</div><div class=\"line\">    CGContextRef context = UIGraphicsGetCurrentContext();</div><div class=\"line\">    CGRect rect = CGRectMake(0, 0, scaledImage.size.width, scaledImage.size.height);</div><div class=\"line\">    CGContextScaleCTM(context, 1, -1);</div><div class=\"line\">    CGContextTranslateCTM(context, 0, -rect.size.height);</div><div class=\"line\">    </div><div class=\"line\">    CGFloat minSize = MIN(scaledImage.size.width, scaledImage.size.height);</div><div class=\"line\">    if (borderWidth &lt; minSize / 2) &#123;</div><div class=\"line\">        UIBezierPath *path = [UIBezierPath bezierPathWithRoundedRect:CGRectInset(rect, borderWidth, borderWidth) byRoundingCorners:corners cornerRadii:CGSizeMake(radius, borderWidth)];</div><div class=\"line\">        CGContextSaveGState(context);</div><div class=\"line\">        [path addClip];</div><div class=\"line\">        CGContextDrawImage(context, rect, scaledImage.CGImage);</div><div class=\"line\">        CGContextRestoreGState(context);</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    UIImage *image = UIGraphicsGetImageFromCurrentImageContext();</div><div class=\"line\">    image = [image pp_imageByRoundBorderedColor:borderColor borderWidth:borderWidth];   \t// 加上边框</div><div class=\"line\">    UIGraphicsEndImageContext();</div><div class=\"line\">    return image;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">// 图片加边框</div><div class=\"line\">- (UIImage *)pp_imageByRoundBorderedColor:(UIColor *)borderColor</div><div class=\"line\">                              borderWidth:(CGFloat)borderWidth</div><div class=\"line\">&#123;</div><div class=\"line\">    if (self.size.height != self.size.width) &#123;</div><div class=\"line\">        return self;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    if (!borderColor || borderWidth &gt; self.size.width / 2 || borderWidth &lt; 0) &#123;</div><div class=\"line\">        return self;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    UIGraphicsBeginImageContextWithOptions(self.size, NO, 0);</div><div class=\"line\">    [self drawAtPoint:CGPointZero];</div><div class=\"line\">    CGRect rect = CGRectMake(0, 0, self.size.width, self.size.height);</div><div class=\"line\">    CGFloat strokeInset = borderWidth / 2;</div><div class=\"line\">    CGRect strokeRect = CGRectInset(rect, strokeInset, strokeInset);</div><div class=\"line\">    CGFloat radius = self.size.width / 2;</div><div class=\"line\">    UIBezierPath *path = [UIBezierPath bezierPathWithRoundedRect:strokeRect byRoundingCorners:UIRectCornerAllCorners cornerRadii:CGSizeMake(radius, borderWidth)];</div><div class=\"line\">    path.lineWidth = borderWidth;</div><div class=\"line\">    [borderColor setStroke];</div><div class=\"line\">    [path stroke];</div><div class=\"line\">    UIImage *result = UIGraphicsGetImageFromCurrentImageContext();</div><div class=\"line\">    UIGraphicsEndImageContext();</div><div class=\"line\">    return result;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"圆角头像控件\"><a href=\"#圆角头像控件\" class=\"headerlink\" title=\"圆角头像控件\"></a>圆角头像控件</h3><p>这里采用 NSOperation + NSOperationQueue 的方式进行多线程处理，在图片、边框等属性的 set 方法里调用 setNeedsLayout 方法刷新布局，同时设置 _isNeedTransform 标记位为 YES，表示需要刷新，可以提高性能。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (void)setAvatarImage:(UIImage *)avatarImage</div><div class=\"line\">&#123;</div><div class=\"line\">    if (_avatarImage != avatarImage) &#123;</div><div class=\"line\">        _avatarImage = avatarImage;</div><div class=\"line\">        </div><div class=\"line\">        _isNeedTransform = YES;      // 需要刷新的标识</div><div class=\"line\">        [self setNeedsLayout];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (void)setBorderHidden:(BOOL)borderHidden</div><div class=\"line\">&#123;</div><div class=\"line\">    if (_borderHidden != borderHidden) &#123;</div><div class=\"line\">        _borderHidden = borderHidden;</div><div class=\"line\">        </div><div class=\"line\">        _isNeedTransform = YES;\t\t// 需要刷新的标识</div><div class=\"line\">        [self setNeedsLayout];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">+ (NSOperationQueue *)sharedTransformQueue</div><div class=\"line\">&#123;</div><div class=\"line\">    static NSOperationQueue *transformQueue;</div><div class=\"line\">    static dispatch_once_t onceToken;</div><div class=\"line\">    dispatch_once(&amp;onceToken, ^&#123;</div><div class=\"line\">        transformQueue = [[NSOperationQueue alloc] init];</div><div class=\"line\">        transformQueue.name = @&quot;io.github.vernonvan.PPRoundedAvatar.sharedOperationQueue&quot;;</div><div class=\"line\">        transformQueue.maxConcurrentOperationCount = 20;</div><div class=\"line\">    &#125;);</div><div class=\"line\">    return transformQueue;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (void)layoutSubviews</div><div class=\"line\">&#123;</div><div class=\"line\">    [super layoutSubviews];</div><div class=\"line\">    </div><div class=\"line\">    if (!self.avatarImage &amp;&amp; !self.imageBackgroundColor) &#123;</div><div class=\"line\">        return;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    if (self.bounds.size.width &lt;= 0 || self.bounds.size.height &lt;= 0) &#123;</div><div class=\"line\">        return;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    if (_isNeedTransform || !CGSizeEqualToSize(self.bounds.size, self.imageView.image.size)) &#123;</div><div class=\"line\">        [self transformImage];</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">- (void)transformImage</div><div class=\"line\">&#123;</div><div class=\"line\">    UIImage *startImage = self.avatarImage;</div><div class=\"line\">    </div><div class=\"line\">    NSBlockOperation *transformOperation = [[NSBlockOperation alloc] init];</div><div class=\"line\">    __weak NSBlockOperation *weakTransformOperation = transformOperation;</div><div class=\"line\">    [transformOperation addExecutionBlock:^&#123;</div><div class=\"line\">        NSBlockOperation *strongTransformOperation = weakTransformOperation;</div><div class=\"line\">        </div><div class=\"line\">        if ([strongTransformOperation isCancelled]) &#123;</div><div class=\"line\">            return;</div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">        UIImage *transformedImage = nil;</div><div class=\"line\">        if (self.avatarImage) &#123;</div><div class=\"line\">            transformedImage = [self.avatarImage pp_imageByRoundCornerRadius:self.bounds.size.width scaleSize:self.bounds.size];</div><div class=\"line\">        &#125; else if (self.imageBackgroundColor) &#123;</div><div class=\"line\">            transformedImage = [UIImage pp_roundImageWithColor:self.imageBackgroundColor radius:self.bounds.size.width / 2];</div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">        if (!self.borderHidden) &#123;</div><div class=\"line\">            transformedImage = [transformedImage pp_imageByRoundBorderedColor:self.borderColor borderWidth:self.borderWidth];</div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">        dispatch_async(dispatch_get_main_queue(), ^&#123;</div><div class=\"line\">            if ([strongTransformOperation isCancelled]) &#123;</div><div class=\"line\">                return;</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (self.avatarImage == startImage) &#123;  // 1</div><div class=\"line\">                _isNeedTransform = NO;</div><div class=\"line\">                [self setImage:transformedImage forState:UIControlStateNormal];</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;];</div><div class=\"line\">    </div><div class=\"line\">    [[self.class sharedTransformQueue] addOperation:transformOperation];</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在上面有一个标注了1的注释点，这里的条件判断是为了避免多线程时序性的问题而加的。考虑这样的一种常见情况：圆角头像控件是表格上的单元格（cell）上的子视图，某个 cell 被滑到屏幕上，于是开始头像的裁剪（这里将这个头像称为旧头像），然后在这个裁剪尚未完成的时候，这个 cell 被滑出了屏幕，然后根据新的图片裁剪圆角（这个头像称为新头像），可能出现新头像裁剪早于旧头像完成的情况，就会导致控件先设置头像为新头像，然后被慢悠悠才完成裁剪的旧头像覆盖的问题。所以这里用这个条件避免这个问题。</p>\n<h2 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h2><p>将上述的操作都封装隐藏好，现在的圆角头像控件 <strong>PPRoundedAvatar</strong> 的使用就很简单了，<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">PPRoundedAvatar *avatar = [[PPRoundedAvatar alloc] initWithFrame:CGRectMake(0, 0, 100, 100)];</div><div class=\"line\">avatar.avatarImage = [UIImage imageNamed:@&quot;example.png&quot;];       // 头像图片</div><div class=\"line\">avatar.borderWidth = 1.0;                                       // 边框宽度</div><div class=\"line\">avatar.borderColor = UIColor.blackColor;                        // 边框颜色</div><div class=\"line\">avatar.borderHidden = NO;                                       // 显示边框</div><div class=\"line\">avatar.imageBackgroundColor = UIColor.grayColor;                // 背景颜色</div><div class=\"line\">[self.view addSubview:avatar];</div></pre></td></tr></table></figure></p>\n<p>具体的代码已经丢到了 <a href=\"https://github.com/VernonVan/PPRoundedAvatar\">github</a> 上了，同时支持 Cocoapods 导入项目。<br>有需要的可以 clone 进行使用，也欢迎 pull request 完善这个控件。</p>\n<h2 id=\"插叙\"><a href=\"#插叙\" class=\"headerlink\" title=\"插叙\"></a>插叙</h2><p>技术上的问题就说到了这里，可是做一个开源项目不仅在技术上需要反复斟酌，而且在 github 的展示、demo 的展示等地方都需要有界面的设计，可苦了我这直男审美……/(ㄒoㄒ)/~~<br>这也导致了我家又吉君实在是看不下去了，终于勇敢地站了出来帮我把界面的设计给做好了，当中的你来我往又是另外的<a href=\"https://vernonvan.github.io/2017/04/01/ruanpapa%E5%92%8C%E5%8F%88%E5%90%89%E5%90%9B%E7%9A%84%E6%97%A5%E5%B8%B8%E4%B9%8B%E4%B8%80/\">故事</a>。真的是对我家又吉君感激涕零~~~<br>呐，又吉君，你帮我画一辈子设计好不好吖，我带你去吃鸡锁骨、卷饼、酱香饼、枣糕还有烤冷面哦~哈哈哈哈啊哈哈哈</p>\n"},{"title":"ruanpapa和又吉君的日常之二","date":"2017-04-10T00:50:05.000Z","_content":"\n## ruanpapa和又吉君的日常之二\n\n> 清明节放假，又吉君就算计着和小伙伴出去玩，去哪儿呢，不如：**烟花三月下扬州** 吧！\n>\n> ### 谁想到这一玩ruanpapa就不高兴了\n>\n> ### 前段时间还说又吉君是“小肾脏 ”的papa，竟然发小脾气了！\n>\n> ![特别的昵称](http://upload-images.jianshu.io/upload_images/5431890-a5faad624a4c040a.jpg)\n>\n> <p align=\"center\"><font color=\"9E9E9E\"><u>特别的昵称</u></font></p>\n>\n> <br>\n\n\n## 他发什么脾气呢\n\n>![(´･ω･`)](http://upload-images.jianshu.io/upload_images/5431890-82b8059afc595d42.jpg)\n>\n><p align=\"center\"><font color=\"9E9E9E\"><u>(´･ω･`)</u></font></p>\n><br>\n>\n>*  对，就是因为老子出去玩了三天两天半没搭理他……这货无聊得要爆炸！\n>\n>* 嗯，于是他就发脾气了！\n>\n>* 发脾气了！\n>\n>* 脾气了！\n>\n>* 气了！\n>\n>* 了！\n>\n>* ！\n>\n>* ......\n>\n>   ​\n>\n>   papa啊，我的papa。  你鸡母鸡啊，你每次有小脾气我都蛮担心的！我怕你一不小心就不理我了……但是我又觉得你不会不理我...很矛盾的心理_(:3 」∠)_然后我想讨好你吧，又不知道我自己哪里不对……\n>\n>   所以！你可不可以下次不要发脾气呀！有不开心的事要和我讲噢！我好好听着！！\n\n\n## 最后放几张扬州的图充充篇幅....\n\n\n![不知道哪个巷子里的路灯...](http://upload-images.jianshu.io/upload_images/5431890-0cff0046db87663f.jpg)\n\n<p align=\"center\"><font color=\"9E9E9E\"><u>不知道哪个巷子里的路灯...</u></font></p>\n<br>\n\n![何园的亭子](http://upload-images.jianshu.io/upload_images/5431890-507ed4d57fa25230.jpg)\n\n<p align=\"center\"><font color=\"9E9E9E\"><u>何园的亭子</u></font></p>\n<br>\n\n![桃花](http://upload-images.jianshu.io/upload_images/5431890-b79184fa44bc8e33.jpg)\n\n<p align=\"center\"><font color=\"9E9E9E\"><u>桃花</u></font></p>\n<br>\n\n![长长的夹道](http://upload-images.jianshu.io/upload_images/5431890-298a91a209912a45.jpg)\n\n<p align=\"center\"><font color=\"9E9E9E\"><u>长长的夹道</u></font></p>\n<br>\n\n* 我是又吉君，一个集ruanpapa和好脾气于一身的大可爱！\n\n<br>\n<br>\n<p align=\"right\">by：又吉君</p>","source":"_posts/ruanpapa和又吉君的日常之二.md","raw":"---\ntitle: ruanpapa和又吉君的日常之二\ndate: 2017-04-10 08:50:05\ntags:\ncategories:\n- ruanpapa&又吉君的日常\n---\n\n## ruanpapa和又吉君的日常之二\n\n> 清明节放假，又吉君就算计着和小伙伴出去玩，去哪儿呢，不如：**烟花三月下扬州** 吧！\n>\n> ### 谁想到这一玩ruanpapa就不高兴了\n>\n> ### 前段时间还说又吉君是“小肾脏 ”的papa，竟然发小脾气了！\n>\n> ![特别的昵称](http://upload-images.jianshu.io/upload_images/5431890-a5faad624a4c040a.jpg)\n>\n> <p align=\"center\"><font color=\"9E9E9E\"><u>特别的昵称</u></font></p>\n>\n> <br>\n\n\n## 他发什么脾气呢\n\n>![(´･ω･`)](http://upload-images.jianshu.io/upload_images/5431890-82b8059afc595d42.jpg)\n>\n><p align=\"center\"><font color=\"9E9E9E\"><u>(´･ω･`)</u></font></p>\n><br>\n>\n>*  对，就是因为老子出去玩了三天两天半没搭理他……这货无聊得要爆炸！\n>\n>* 嗯，于是他就发脾气了！\n>\n>* 发脾气了！\n>\n>* 脾气了！\n>\n>* 气了！\n>\n>* 了！\n>\n>* ！\n>\n>* ......\n>\n>   ​\n>\n>   papa啊，我的papa。  你鸡母鸡啊，你每次有小脾气我都蛮担心的！我怕你一不小心就不理我了……但是我又觉得你不会不理我...很矛盾的心理_(:3 」∠)_然后我想讨好你吧，又不知道我自己哪里不对……\n>\n>   所以！你可不可以下次不要发脾气呀！有不开心的事要和我讲噢！我好好听着！！\n\n\n## 最后放几张扬州的图充充篇幅....\n\n\n![不知道哪个巷子里的路灯...](http://upload-images.jianshu.io/upload_images/5431890-0cff0046db87663f.jpg)\n\n<p align=\"center\"><font color=\"9E9E9E\"><u>不知道哪个巷子里的路灯...</u></font></p>\n<br>\n\n![何园的亭子](http://upload-images.jianshu.io/upload_images/5431890-507ed4d57fa25230.jpg)\n\n<p align=\"center\"><font color=\"9E9E9E\"><u>何园的亭子</u></font></p>\n<br>\n\n![桃花](http://upload-images.jianshu.io/upload_images/5431890-b79184fa44bc8e33.jpg)\n\n<p align=\"center\"><font color=\"9E9E9E\"><u>桃花</u></font></p>\n<br>\n\n![长长的夹道](http://upload-images.jianshu.io/upload_images/5431890-298a91a209912a45.jpg)\n\n<p align=\"center\"><font color=\"9E9E9E\"><u>长长的夹道</u></font></p>\n<br>\n\n* 我是又吉君，一个集ruanpapa和好脾气于一身的大可爱！\n\n<br>\n<br>\n<p align=\"right\">by：又吉君</p>","slug":"ruanpapa和又吉君的日常之二","published":1,"updated":"2017-04-11T01:59:48.000Z","_id":"cj1cw6rfm0006l53trdkkgxyy","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"ruanpapa和又吉君的日常之二\"><a href=\"#ruanpapa和又吉君的日常之二\" class=\"headerlink\" title=\"ruanpapa和又吉君的日常之二\"></a>ruanpapa和又吉君的日常之二</h2><blockquote>\n<p>清明节放假，又吉君就算计着和小伙伴出去玩，去哪儿呢，不如：<strong>烟花三月下扬州</strong> 吧！</p>\n<h3 id=\"谁想到这一玩ruanpapa就不高兴了\"><a href=\"#谁想到这一玩ruanpapa就不高兴了\" class=\"headerlink\" title=\"谁想到这一玩ruanpapa就不高兴了\"></a>谁想到这一玩ruanpapa就不高兴了</h3><h3 id=\"前段时间还说又吉君是“小肾脏-”的papa，竟然发小脾气了！\"><a href=\"#前段时间还说又吉君是“小肾脏-”的papa，竟然发小脾气了！\" class=\"headerlink\" title=\"前段时间还说又吉君是“小肾脏 ”的papa，竟然发小脾气了！\"></a>前段时间还说又吉君是“小肾脏 ”的papa，竟然发小脾气了！</h3><p><img src=\"http://upload-images.jianshu.io/upload_images/5431890-a5faad624a4c040a.jpg\" alt=\"特别的昵称\"></p>\n<p align=\"center\"><font color=\"9E9E9E\"><u>特别的昵称</u></font></p>\n\n<p><br></p>\n</blockquote>\n<h2 id=\"他发什么脾气呢\"><a href=\"#他发什么脾气呢\" class=\"headerlink\" title=\"他发什么脾气呢\"></a>他发什么脾气呢</h2><blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/5431890-82b8059afc595d42.jpg\" alt=\"(´･ω･`)\"></p>\n<p></p><p align=\"center\"><font color=\"9E9E9E\"><u>(´･ω･`)</u></font></p><br><br><p></p>\n<ul>\n<li><p>对，就是因为老子出去玩了三天两天半没搭理他……这货无聊得要爆炸！</p>\n</li>\n<li><p>嗯，于是他就发脾气了！</p>\n</li>\n<li><p>发脾气了！</p>\n</li>\n<li><p>脾气了！</p>\n</li>\n<li><p>气了！</p>\n</li>\n<li><p>了！</p>\n</li>\n<li><p>！</p>\n</li>\n<li><p>……</p>\n<p>​</p>\n<p>papa啊，我的papa。  你鸡母鸡啊，你每次有小脾气我都蛮担心的！我怕你一不小心就不理我了……但是我又觉得你不会不理我…很矛盾的心理<em>(:3 」∠)</em>然后我想讨好你吧，又不知道我自己哪里不对……</p>\n<p>所以！你可不可以下次不要发脾气呀！有不开心的事要和我讲噢！我好好听着！！</p>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"最后放几张扬州的图充充篇幅…\"><a href=\"#最后放几张扬州的图充充篇幅…\" class=\"headerlink\" title=\"最后放几张扬州的图充充篇幅….\"></a>最后放几张扬州的图充充篇幅….</h2><p><img src=\"http://upload-images.jianshu.io/upload_images/5431890-0cff0046db87663f.jpg\" alt=\"不知道哪个巷子里的路灯...\"></p>\n<p align=\"center\"><font color=\"9E9E9E\"><u>不知道哪个巷子里的路灯…</u></font></p><br><br><br><br><img src=\"http://upload-images.jianshu.io/upload_images/5431890-507ed4d57fa25230.jpg\" alt=\"何园的亭子\"><br><br><p align=\"center\"><font color=\"9E9E9E\"><u>何园的亭子</u></font></p><br><br><br><br><img src=\"http://upload-images.jianshu.io/upload_images/5431890-b79184fa44bc8e33.jpg\" alt=\"桃花\"><br><br><p align=\"center\"><font color=\"9E9E9E\"><u>桃花</u></font></p><br><br><br><br><img src=\"http://upload-images.jianshu.io/upload_images/5431890-298a91a209912a45.jpg\" alt=\"长长的夹道\"><br><br><p align=\"center\"><font color=\"9E9E9E\"><u>长长的夹道</u></font></p><br><br><br><br>* 我是又吉君，一个集ruanpapa和好脾气于一身的大可爱！<br><br><br><br><br><br><p align=\"right\">by：又吉君</p>","excerpt":"","more":"<h2 id=\"ruanpapa和又吉君的日常之二\"><a href=\"#ruanpapa和又吉君的日常之二\" class=\"headerlink\" title=\"ruanpapa和又吉君的日常之二\"></a>ruanpapa和又吉君的日常之二</h2><blockquote>\n<p>清明节放假，又吉君就算计着和小伙伴出去玩，去哪儿呢，不如：<strong>烟花三月下扬州</strong> 吧！</p>\n<h3 id=\"谁想到这一玩ruanpapa就不高兴了\"><a href=\"#谁想到这一玩ruanpapa就不高兴了\" class=\"headerlink\" title=\"谁想到这一玩ruanpapa就不高兴了\"></a>谁想到这一玩ruanpapa就不高兴了</h3><h3 id=\"前段时间还说又吉君是“小肾脏-”的papa，竟然发小脾气了！\"><a href=\"#前段时间还说又吉君是“小肾脏-”的papa，竟然发小脾气了！\" class=\"headerlink\" title=\"前段时间还说又吉君是“小肾脏 ”的papa，竟然发小脾气了！\"></a>前段时间还说又吉君是“小肾脏 ”的papa，竟然发小脾气了！</h3><p><img src=\"http://upload-images.jianshu.io/upload_images/5431890-a5faad624a4c040a.jpg\" alt=\"特别的昵称\"></p>\n<p align=\"center\"><font color=\"9E9E9E\"><u>特别的昵称</u></font></p>\n\n<p><br></p>\n</blockquote>\n<h2 id=\"他发什么脾气呢\"><a href=\"#他发什么脾气呢\" class=\"headerlink\" title=\"他发什么脾气呢\"></a>他发什么脾气呢</h2><blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/5431890-82b8059afc595d42.jpg\" alt=\"(´･ω･`)\"></p>\n<p><p align=\"center\"><font color=\"9E9E9E\"><u>(´･ω･`)</u></font></p><br><br></p>\n<ul>\n<li><p>对，就是因为老子出去玩了三天两天半没搭理他……这货无聊得要爆炸！</p>\n</li>\n<li><p>嗯，于是他就发脾气了！</p>\n</li>\n<li><p>发脾气了！</p>\n</li>\n<li><p>脾气了！</p>\n</li>\n<li><p>气了！</p>\n</li>\n<li><p>了！</p>\n</li>\n<li><p>！</p>\n</li>\n<li><p>……</p>\n<p>​</p>\n<p>papa啊，我的papa。  你鸡母鸡啊，你每次有小脾气我都蛮担心的！我怕你一不小心就不理我了……但是我又觉得你不会不理我…很矛盾的心理<em>(:3 」∠)</em>然后我想讨好你吧，又不知道我自己哪里不对……</p>\n<p>所以！你可不可以下次不要发脾气呀！有不开心的事要和我讲噢！我好好听着！！</p>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"最后放几张扬州的图充充篇幅…\"><a href=\"#最后放几张扬州的图充充篇幅…\" class=\"headerlink\" title=\"最后放几张扬州的图充充篇幅….\"></a>最后放几张扬州的图充充篇幅….</h2><p><img src=\"http://upload-images.jianshu.io/upload_images/5431890-0cff0046db87663f.jpg\" alt=\"不知道哪个巷子里的路灯...\"></p>\n<p align=\"center\"><font color=\"9E9E9E\"><u>不知道哪个巷子里的路灯…</u></font></p><br><br><br><br><img src=\"http://upload-images.jianshu.io/upload_images/5431890-507ed4d57fa25230.jpg\" alt=\"何园的亭子\"><br><br><p align=\"center\"><font color=\"9E9E9E\"><u>何园的亭子</u></font></p><br><br><br><br><img src=\"http://upload-images.jianshu.io/upload_images/5431890-b79184fa44bc8e33.jpg\" alt=\"桃花\"><br><br><p align=\"center\"><font color=\"9E9E9E\"><u>桃花</u></font></p><br><br><br><br><img src=\"http://upload-images.jianshu.io/upload_images/5431890-298a91a209912a45.jpg\" alt=\"长长的夹道\"><br><br><p align=\"center\"><font color=\"9E9E9E\"><u>长长的夹道</u></font></p><br><br><br><br>* 我是又吉君，一个集ruanpapa和好脾气于一身的大可爱！<br><br><br><br><br><br><p align=\"right\">by：又吉君</p>"},{"title":"Swift的lazy关键字–延迟加载","date":"2016-12-28T08:29:02.000Z","_content":"### 定义\nlazy属性就是初始值直到第一次使用的时候才执行计算的属性，这对小内存的手机所产生的性能上的优化是相当可观的。\n**注意：lazy属性必须是变量（var修饰符），因为常量属性（let修饰符）必须在初始化之前就有值，所以常量属性不能定义为lazy。**\n\n### Objective-C中的延迟加载\nObjective-C并没有在语法上支持延迟加载，通常是由程序员自己手动实现的。\n示例如下：\n``` swift\n@property (nonatomic, strong) NSArray *names;\n\n- (NSArray *)names {\n    if (!_names) {\n        _names = [[NSArray alloc] init];\n        NSLog(@\"只在首次访问输出\");\n    }\n    return _names;\n}\n```\n说明：在初始化对象后，_names 是 nil。只有当首次访问 names 属性时 getter 方法会被调用，并检查如果还没有初始化的话，就进行赋值。可以想见，控制台打印的“只在首次访问输出”的确只会输出一次。我们之后再多次访问这个属性的话，因为 _names已经有值，因此将直接返回。\n分析：getter方法和下划线语法对初学者并不是那么的友好，同时属性以及对应的getter方法空间上隔得比较远，代码逻辑不直观。\n\n### Swift的延迟加载\nSwift中则可以通过**lazy**关键字简单地实现相同功能，比如上述示例代码在Swift中实现的话：\n``` swift\nlazy var names: NSArray = {\n\tlet names = NSArray()\n\tprint(\"只在首次访问输出\")\n\treturn names\n}()\n```\n分析：相比起Objective-C中的实现，现在的lazy是在是简单的多了，而且更加的直观。除了上述直接在属性后面定义闭包调用的方法以外，还可以使用实例方法（func）和类方法（class func）来为lazy属性初始化添加必要的逻辑。\n\n### 使用场景\n延迟加载主要有以下两个使用的场景：\n1. 属性的初始值依赖于其他的属性值，只有其他的属性值有值之后才能得出该属性的值。\n2. 属性的初始值需要大量的计算。\n\n### 高级用法\n在Swift标准库中还有一组lazy方法，可以配合map、filter这类接受闭包并进行运行的方法一起，让整个行为变成延时进行的。以下是map函数的用法（示例取自喵神的[Swifter](http://swifter.tips/lazy/)）:\n``` Swift\nlet data = 1...3\nlet result = data.lazy.map {\n    (i: Int) -> Int in\n    print(\"正在处理 \\(i)\")\n    return i * 2\n}\n\nprint(\"准备访问结果\")\nfor i in result {\n    print(\"操作后结果为 \\(i)\")\n}\n\nprint(\"操作完毕\")\n```\n``` swift\n// 准备访问结果\n// 正在处理 1\n// 操作后结果为 2\n// 正在处理 2\n// 操作后结果为 4\n// 正在处理 3\n// 操作后结果为 6\n// 操作完毕\n```\n\n> 对于那些不需要完全运行，可能提前退出的情况，使用 lazy 来进行性能优化效果会非常有效。\n\n参考链接：\n1. 喵神：[LAZY 修饰符和 LAZY 方法](http://swifter.tips/lazy/)\n2. Swiftist：[Swift中的延迟加载](http://swiftist.org/topics/129)\n3. [Apple developer](https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Properties.html)\n","source":"_posts/Swift的lazy关键字–延迟加载.md","raw":"---\ntitle: Swift的lazy关键字–延迟加载\ndate: 2016-12-28 16:29:02\ntags:\n- iOS\n- Swift\ncategories:\n- ruanpapa--技术贴\n---\n### 定义\nlazy属性就是初始值直到第一次使用的时候才执行计算的属性，这对小内存的手机所产生的性能上的优化是相当可观的。\n**注意：lazy属性必须是变量（var修饰符），因为常量属性（let修饰符）必须在初始化之前就有值，所以常量属性不能定义为lazy。**\n\n### Objective-C中的延迟加载\nObjective-C并没有在语法上支持延迟加载，通常是由程序员自己手动实现的。\n示例如下：\n``` swift\n@property (nonatomic, strong) NSArray *names;\n\n- (NSArray *)names {\n    if (!_names) {\n        _names = [[NSArray alloc] init];\n        NSLog(@\"只在首次访问输出\");\n    }\n    return _names;\n}\n```\n说明：在初始化对象后，_names 是 nil。只有当首次访问 names 属性时 getter 方法会被调用，并检查如果还没有初始化的话，就进行赋值。可以想见，控制台打印的“只在首次访问输出”的确只会输出一次。我们之后再多次访问这个属性的话，因为 _names已经有值，因此将直接返回。\n分析：getter方法和下划线语法对初学者并不是那么的友好，同时属性以及对应的getter方法空间上隔得比较远，代码逻辑不直观。\n\n### Swift的延迟加载\nSwift中则可以通过**lazy**关键字简单地实现相同功能，比如上述示例代码在Swift中实现的话：\n``` swift\nlazy var names: NSArray = {\n\tlet names = NSArray()\n\tprint(\"只在首次访问输出\")\n\treturn names\n}()\n```\n分析：相比起Objective-C中的实现，现在的lazy是在是简单的多了，而且更加的直观。除了上述直接在属性后面定义闭包调用的方法以外，还可以使用实例方法（func）和类方法（class func）来为lazy属性初始化添加必要的逻辑。\n\n### 使用场景\n延迟加载主要有以下两个使用的场景：\n1. 属性的初始值依赖于其他的属性值，只有其他的属性值有值之后才能得出该属性的值。\n2. 属性的初始值需要大量的计算。\n\n### 高级用法\n在Swift标准库中还有一组lazy方法，可以配合map、filter这类接受闭包并进行运行的方法一起，让整个行为变成延时进行的。以下是map函数的用法（示例取自喵神的[Swifter](http://swifter.tips/lazy/)）:\n``` Swift\nlet data = 1...3\nlet result = data.lazy.map {\n    (i: Int) -> Int in\n    print(\"正在处理 \\(i)\")\n    return i * 2\n}\n\nprint(\"准备访问结果\")\nfor i in result {\n    print(\"操作后结果为 \\(i)\")\n}\n\nprint(\"操作完毕\")\n```\n``` swift\n// 准备访问结果\n// 正在处理 1\n// 操作后结果为 2\n// 正在处理 2\n// 操作后结果为 4\n// 正在处理 3\n// 操作后结果为 6\n// 操作完毕\n```\n\n> 对于那些不需要完全运行，可能提前退出的情况，使用 lazy 来进行性能优化效果会非常有效。\n\n参考链接：\n1. 喵神：[LAZY 修饰符和 LAZY 方法](http://swifter.tips/lazy/)\n2. Swiftist：[Swift中的延迟加载](http://swiftist.org/topics/129)\n3. [Apple developer](https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Properties.html)\n","slug":"Swift的lazy关键字–延迟加载","published":1,"updated":"2017-03-30T05:42:10.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1cw6rfr0008l53tcvxk0jkm","content":"<h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>lazy属性就是初始值直到第一次使用的时候才执行计算的属性，这对小内存的手机所产生的性能上的优化是相当可观的。<br><strong>注意：lazy属性必须是变量（var修饰符），因为常量属性（let修饰符）必须在初始化之前就有值，所以常量属性不能定义为lazy。</strong></p>\n<h3 id=\"Objective-C中的延迟加载\"><a href=\"#Objective-C中的延迟加载\" class=\"headerlink\" title=\"Objective-C中的延迟加载\"></a>Objective-C中的延迟加载</h3><p>Objective-C并没有在语法上支持延迟加载，通常是由程序员自己手动实现的。<br>示例如下：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">@property (nonatomic, strong) <span class=\"type\">NSArray</span> *names;</div><div class=\"line\"></div><div class=\"line\">- (<span class=\"type\">NSArray</span> *)names &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (!_names) &#123;</div><div class=\"line\">        _names = [[<span class=\"type\">NSArray</span> alloc] <span class=\"keyword\">init</span>];</div><div class=\"line\">        <span class=\"type\">NSLog</span>(@<span class=\"string\">\"只在首次访问输出\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> _names;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>说明：在初始化对象后，_names 是 nil。只有当首次访问 names 属性时 getter 方法会被调用，并检查如果还没有初始化的话，就进行赋值。可以想见，控制台打印的“只在首次访问输出”的确只会输出一次。我们之后再多次访问这个属性的话，因为 _names已经有值，因此将直接返回。<br>分析：getter方法和下划线语法对初学者并不是那么的友好，同时属性以及对应的getter方法空间上隔得比较远，代码逻辑不直观。</p>\n<h3 id=\"Swift的延迟加载\"><a href=\"#Swift的延迟加载\" class=\"headerlink\" title=\"Swift的延迟加载\"></a>Swift的延迟加载</h3><p>Swift中则可以通过<strong>lazy</strong>关键字简单地实现相同功能，比如上述示例代码在Swift中实现的话：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">lazy</span> <span class=\"keyword\">var</span> names: <span class=\"type\">NSArray</span> = &#123;</div><div class=\"line\">\t<span class=\"keyword\">let</span> names = <span class=\"type\">NSArray</span>()</div><div class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">\"只在首次访问输出\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">return</span> names</div><div class=\"line\">&#125;()</div></pre></td></tr></table></figure></p>\n<p>分析：相比起Objective-C中的实现，现在的lazy是在是简单的多了，而且更加的直观。除了上述直接在属性后面定义闭包调用的方法以外，还可以使用实例方法（func）和类方法（class func）来为lazy属性初始化添加必要的逻辑。</p>\n<h3 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h3><p>延迟加载主要有以下两个使用的场景：</p>\n<ol>\n<li>属性的初始值依赖于其他的属性值，只有其他的属性值有值之后才能得出该属性的值。</li>\n<li>属性的初始值需要大量的计算。</li>\n</ol>\n<h3 id=\"高级用法\"><a href=\"#高级用法\" class=\"headerlink\" title=\"高级用法\"></a>高级用法</h3><p>在Swift标准库中还有一组lazy方法，可以配合map、filter这类接受闭包并进行运行的方法一起，让整个行为变成延时进行的。以下是map函数的用法（示例取自喵神的<a href=\"http://swifter.tips/lazy/\" target=\"_blank\" rel=\"external\">Swifter</a>）:<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">let</span> data = <span class=\"number\">1</span>...<span class=\"number\">3</span></div><div class=\"line\"><span class=\"keyword\">let</span> result = data.<span class=\"built_in\">lazy</span>.<span class=\"built_in\">map</span> &#123;</div><div class=\"line\">    (i: <span class=\"type\">Int</span>) -&gt; <span class=\"type\">Int</span> <span class=\"keyword\">in</span></div><div class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"正在处理 <span class=\"subst\">\\(i)</span>\"</span>)</div><div class=\"line\">    <span class=\"keyword\">return</span> i * <span class=\"number\">2</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"准备访问结果\"</span>)</div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> result &#123;</div><div class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"操作后结果为 <span class=\"subst\">\\(i)</span>\"</span>)</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"操作完毕\"</span>)</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 准备访问结果</span></div><div class=\"line\"><span class=\"comment\">// 正在处理 1</span></div><div class=\"line\"><span class=\"comment\">// 操作后结果为 2</span></div><div class=\"line\"><span class=\"comment\">// 正在处理 2</span></div><div class=\"line\"><span class=\"comment\">// 操作后结果为 4</span></div><div class=\"line\"><span class=\"comment\">// 正在处理 3</span></div><div class=\"line\"><span class=\"comment\">// 操作后结果为 6</span></div><div class=\"line\"><span class=\"comment\">// 操作完毕</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>对于那些不需要完全运行，可能提前退出的情况，使用 lazy 来进行性能优化效果会非常有效。</p>\n</blockquote>\n<p>参考链接：</p>\n<ol>\n<li>喵神：<a href=\"http://swifter.tips/lazy/\" target=\"_blank\" rel=\"external\">LAZY 修饰符和 LAZY 方法</a></li>\n<li>Swiftist：<a href=\"http://swiftist.org/topics/129\" target=\"_blank\" rel=\"external\">Swift中的延迟加载</a></li>\n<li><a href=\"https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Properties.html\" target=\"_blank\" rel=\"external\">Apple developer</a></li>\n</ol>\n","excerpt":"","more":"<h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>lazy属性就是初始值直到第一次使用的时候才执行计算的属性，这对小内存的手机所产生的性能上的优化是相当可观的。<br><strong>注意：lazy属性必须是变量（var修饰符），因为常量属性（let修饰符）必须在初始化之前就有值，所以常量属性不能定义为lazy。</strong></p>\n<h3 id=\"Objective-C中的延迟加载\"><a href=\"#Objective-C中的延迟加载\" class=\"headerlink\" title=\"Objective-C中的延迟加载\"></a>Objective-C中的延迟加载</h3><p>Objective-C并没有在语法上支持延迟加载，通常是由程序员自己手动实现的。<br>示例如下：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">@property (nonatomic, strong) <span class=\"type\">NSArray</span> *names;</div><div class=\"line\"></div><div class=\"line\">- (<span class=\"type\">NSArray</span> *)names &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (!_names) &#123;</div><div class=\"line\">        _names = [[<span class=\"type\">NSArray</span> alloc] <span class=\"keyword\">init</span>];</div><div class=\"line\">        <span class=\"type\">NSLog</span>(@<span class=\"string\">\"只在首次访问输出\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> _names;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>说明：在初始化对象后，_names 是 nil。只有当首次访问 names 属性时 getter 方法会被调用，并检查如果还没有初始化的话，就进行赋值。可以想见，控制台打印的“只在首次访问输出”的确只会输出一次。我们之后再多次访问这个属性的话，因为 _names已经有值，因此将直接返回。<br>分析：getter方法和下划线语法对初学者并不是那么的友好，同时属性以及对应的getter方法空间上隔得比较远，代码逻辑不直观。</p>\n<h3 id=\"Swift的延迟加载\"><a href=\"#Swift的延迟加载\" class=\"headerlink\" title=\"Swift的延迟加载\"></a>Swift的延迟加载</h3><p>Swift中则可以通过<strong>lazy</strong>关键字简单地实现相同功能，比如上述示例代码在Swift中实现的话：<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">lazy</span> <span class=\"keyword\">var</span> names: <span class=\"type\">NSArray</span> = &#123;</div><div class=\"line\">\t<span class=\"keyword\">let</span> names = <span class=\"type\">NSArray</span>()</div><div class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">\"只在首次访问输出\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">return</span> names</div><div class=\"line\">&#125;()</div></pre></td></tr></table></figure></p>\n<p>分析：相比起Objective-C中的实现，现在的lazy是在是简单的多了，而且更加的直观。除了上述直接在属性后面定义闭包调用的方法以外，还可以使用实例方法（func）和类方法（class func）来为lazy属性初始化添加必要的逻辑。</p>\n<h3 id=\"使用场景\"><a href=\"#使用场景\" class=\"headerlink\" title=\"使用场景\"></a>使用场景</h3><p>延迟加载主要有以下两个使用的场景：</p>\n<ol>\n<li>属性的初始值依赖于其他的属性值，只有其他的属性值有值之后才能得出该属性的值。</li>\n<li>属性的初始值需要大量的计算。</li>\n</ol>\n<h3 id=\"高级用法\"><a href=\"#高级用法\" class=\"headerlink\" title=\"高级用法\"></a>高级用法</h3><p>在Swift标准库中还有一组lazy方法，可以配合map、filter这类接受闭包并进行运行的方法一起，让整个行为变成延时进行的。以下是map函数的用法（示例取自喵神的<a href=\"http://swifter.tips/lazy/\">Swifter</a>）:<br><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">let</span> data = <span class=\"number\">1</span>...<span class=\"number\">3</span></div><div class=\"line\"><span class=\"keyword\">let</span> result = data.<span class=\"built_in\">lazy</span>.<span class=\"built_in\">map</span> &#123;</div><div class=\"line\">    (i: <span class=\"type\">Int</span>) -&gt; <span class=\"type\">Int</span> <span class=\"keyword\">in</span></div><div class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"正在处理 <span class=\"subst\">\\(i)</span>\"</span>)</div><div class=\"line\">    <span class=\"keyword\">return</span> i * <span class=\"number\">2</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"准备访问结果\"</span>)</div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> result &#123;</div><div class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"操作后结果为 <span class=\"subst\">\\(i)</span>\"</span>)</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"操作完毕\"</span>)</div></pre></td></tr></table></figure></p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 准备访问结果</span></div><div class=\"line\"><span class=\"comment\">// 正在处理 1</span></div><div class=\"line\"><span class=\"comment\">// 操作后结果为 2</span></div><div class=\"line\"><span class=\"comment\">// 正在处理 2</span></div><div class=\"line\"><span class=\"comment\">// 操作后结果为 4</span></div><div class=\"line\"><span class=\"comment\">// 正在处理 3</span></div><div class=\"line\"><span class=\"comment\">// 操作后结果为 6</span></div><div class=\"line\"><span class=\"comment\">// 操作完毕</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>对于那些不需要完全运行，可能提前退出的情况，使用 lazy 来进行性能优化效果会非常有效。</p>\n</blockquote>\n<p>参考链接：</p>\n<ol>\n<li>喵神：<a href=\"http://swifter.tips/lazy/\">LAZY 修饰符和 LAZY 方法</a></li>\n<li>Swiftist：<a href=\"http://swiftist.org/topics/129\">Swift中的延迟加载</a></li>\n<li><a href=\"https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Properties.html\">Apple developer</a></li>\n</ol>\n"},{"title":"ruanpapa和又吉君的日常之一","date":"2017-04-01T01:39:53.000Z","_content":"\n## ruanpapa和又吉君的日常\n> ruanpapa最近做了个开源的圆角裁剪工具，期间那是被我各种嫌弃啊！代码放一边不说，反正是开源的，大家拿去用用看就行。\n### 但是！！！里面的各种展示图片简直！\n### 丑！！很丑！！没有更丑！！\n> 于是.....\n\n* “ruanpapa！！！！啊啊啊啊！你看看你这个线怎么像猪八戒的耙子！！”\n* “你不能把这个弄成圆角么！！”\n* “啊！！！你这个选图不行啊！头像图片选的颜色太杂了！”\n* “你这边框，这么细，加了和没加有什么区别！”\n* ........  \n  ![能怎么办](http://upload-images.jianshu.io/upload_images/5431890-59a692e2f42c5d25.jpg)\n  <p align=\"center\"><font color=\"9E9E9E\"><u>能怎么办</u></font></p>\n  <br>\n\n> #### 万般无奈之下，又吉君开始了“设计之旅”\n> 于是.....  \n> 这张充满了直男癌风格的展示图就可爱了！\n>\n> ![喏，展示图](http://upload-images.jianshu.io/upload_images/5431890-ebd81b62a0a5ce02.jpg)\n> <p align=\"center\"><font color=\"9E9E9E\"><u>喏，展示图</u></font></p>\n> <br>\n> **还有经过多次失败弄出来的图标...**\n>\n> ![么么扎٩(๑❛ᴗ❛๑)۶](http://upload-images.jianshu.io/upload_images/5431890-26b53c04af1d3859.jpg)\n> <p align=\"center\"><font color=\"9E9E9E\"><u>么么扎٩(๑❛ᴗ❛๑)۶</u></font></p>\n> <br>\n\n\n\n\n- 啊哈哈哈哈哈哈哈哈哈！！！实际上我ruanpapa设计的也挺好看的！但是我就是喜欢我弄的！！！！\n- 我是又吉君，一个集ruanpapa和智慧于一身的大可爱！\n- 嚯嚯嚯嚯嚯嚯嚯！！\n  <br>\n  <br>\n  <p align=\"right\">by：又吉君</p>\n","source":"_posts/ruanpapa和又吉君的日常之一.md","raw":"---\ntitle: ruanpapa和又吉君的日常之一\ndate: 2017-04-01 09:39:53\ntags:\ncategories:\n- ruanpapa&又吉君的日常\n---\n\n## ruanpapa和又吉君的日常\n> ruanpapa最近做了个开源的圆角裁剪工具，期间那是被我各种嫌弃啊！代码放一边不说，反正是开源的，大家拿去用用看就行。\n### 但是！！！里面的各种展示图片简直！\n### 丑！！很丑！！没有更丑！！\n> 于是.....\n\n* “ruanpapa！！！！啊啊啊啊！你看看你这个线怎么像猪八戒的耙子！！”\n* “你不能把这个弄成圆角么！！”\n* “啊！！！你这个选图不行啊！头像图片选的颜色太杂了！”\n* “你这边框，这么细，加了和没加有什么区别！”\n* ........  \n  ![能怎么办](http://upload-images.jianshu.io/upload_images/5431890-59a692e2f42c5d25.jpg)\n  <p align=\"center\"><font color=\"9E9E9E\"><u>能怎么办</u></font></p>\n  <br>\n\n> #### 万般无奈之下，又吉君开始了“设计之旅”\n> 于是.....  \n> 这张充满了直男癌风格的展示图就可爱了！\n>\n> ![喏，展示图](http://upload-images.jianshu.io/upload_images/5431890-ebd81b62a0a5ce02.jpg)\n> <p align=\"center\"><font color=\"9E9E9E\"><u>喏，展示图</u></font></p>\n> <br>\n> **还有经过多次失败弄出来的图标...**\n>\n> ![么么扎٩(๑❛ᴗ❛๑)۶](http://upload-images.jianshu.io/upload_images/5431890-26b53c04af1d3859.jpg)\n> <p align=\"center\"><font color=\"9E9E9E\"><u>么么扎٩(๑❛ᴗ❛๑)۶</u></font></p>\n> <br>\n\n\n\n\n- 啊哈哈哈哈哈哈哈哈哈！！！实际上我ruanpapa设计的也挺好看的！但是我就是喜欢我弄的！！！！\n- 我是又吉君，一个集ruanpapa和智慧于一身的大可爱！\n- 嚯嚯嚯嚯嚯嚯嚯！！\n  <br>\n  <br>\n  <p align=\"right\">by：又吉君</p>\n","slug":"ruanpapa和又吉君的日常之一","published":1,"updated":"2017-04-10T00:52:24.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1cw6rfx0009l53tv61jv8s9","content":"<h2 id=\"ruanpapa和又吉君的日常\"><a href=\"#ruanpapa和又吉君的日常\" class=\"headerlink\" title=\"ruanpapa和又吉君的日常\"></a>ruanpapa和又吉君的日常</h2><blockquote>\n<p>ruanpapa最近做了个开源的圆角裁剪工具，期间那是被我各种嫌弃啊！代码放一边不说，反正是开源的，大家拿去用用看就行。</p>\n<h3 id=\"但是！！！里面的各种展示图片简直！\"><a href=\"#但是！！！里面的各种展示图片简直！\" class=\"headerlink\" title=\"但是！！！里面的各种展示图片简直！\"></a>但是！！！里面的各种展示图片简直！</h3><h3 id=\"丑！！很丑！！没有更丑！！\"><a href=\"#丑！！很丑！！没有更丑！！\" class=\"headerlink\" title=\"丑！！很丑！！没有更丑！！\"></a>丑！！很丑！！没有更丑！！</h3><p>于是…..</p>\n</blockquote>\n<ul>\n<li>“ruanpapa！！！！啊啊啊啊！你看看你这个线怎么像猪八戒的耙子！！”</li>\n<li>“你不能把这个弄成圆角么！！”</li>\n<li>“啊！！！你这个选图不行啊！头像图片选的颜色太杂了！”</li>\n<li>“你这边框，这么细，加了和没加有什么区别！”</li>\n<li>……..<br><img src=\"http://upload-images.jianshu.io/upload_images/5431890-59a692e2f42c5d25.jpg\" alt=\"能怎么办\"><br><p align=\"center\"><font color=\"9E9E9E\"><u>能怎么办</u></font></p><br><br></li>\n</ul>\n<blockquote>\n<h4 id=\"万般无奈之下，又吉君开始了“设计之旅”\"><a href=\"#万般无奈之下，又吉君开始了“设计之旅”\" class=\"headerlink\" title=\"万般无奈之下，又吉君开始了“设计之旅”\"></a>万般无奈之下，又吉君开始了“设计之旅”</h4><p>于是…..<br>这张充满了直男癌风格的展示图就可爱了！</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/5431890-ebd81b62a0a5ce02.jpg\" alt=\"喏，展示图\"></p>\n<p></p><p align=\"center\"><font color=\"9E9E9E\"><u>喏，展示图</u></font></p><br><br><br><strong>还有经过多次失败弄出来的图标…</strong><p></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/5431890-26b53c04af1d3859.jpg\" alt=\"么么扎٩(๑❛ᴗ❛๑)۶\"></p>\n<p></p><p align=\"center\"><font color=\"9E9E9E\"><u>么么扎٩(๑❛ᴗ❛๑)۶</u></font></p><br><br><p></p>\n</blockquote>\n<ul>\n<li>啊哈哈哈哈哈哈哈哈哈！！！实际上我ruanpapa设计的也挺好看的！但是我就是喜欢我弄的！！！！</li>\n<li>我是又吉君，一个集ruanpapa和智慧于一身的大可爱！</li>\n<li>嚯嚯嚯嚯嚯嚯嚯！！<br><br><br><br><p align=\"right\">by：又吉君</p>\n</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"ruanpapa和又吉君的日常\"><a href=\"#ruanpapa和又吉君的日常\" class=\"headerlink\" title=\"ruanpapa和又吉君的日常\"></a>ruanpapa和又吉君的日常</h2><blockquote>\n<p>ruanpapa最近做了个开源的圆角裁剪工具，期间那是被我各种嫌弃啊！代码放一边不说，反正是开源的，大家拿去用用看就行。</p>\n<h3 id=\"但是！！！里面的各种展示图片简直！\"><a href=\"#但是！！！里面的各种展示图片简直！\" class=\"headerlink\" title=\"但是！！！里面的各种展示图片简直！\"></a>但是！！！里面的各种展示图片简直！</h3><h3 id=\"丑！！很丑！！没有更丑！！\"><a href=\"#丑！！很丑！！没有更丑！！\" class=\"headerlink\" title=\"丑！！很丑！！没有更丑！！\"></a>丑！！很丑！！没有更丑！！</h3><p>于是…..</p>\n</blockquote>\n<ul>\n<li>“ruanpapa！！！！啊啊啊啊！你看看你这个线怎么像猪八戒的耙子！！”</li>\n<li>“你不能把这个弄成圆角么！！”</li>\n<li>“啊！！！你这个选图不行啊！头像图片选的颜色太杂了！”</li>\n<li>“你这边框，这么细，加了和没加有什么区别！”</li>\n<li>……..<br><img src=\"http://upload-images.jianshu.io/upload_images/5431890-59a692e2f42c5d25.jpg\" alt=\"能怎么办\"><br><p align=\"center\"><font color=\"9E9E9E\"><u>能怎么办</u></font></p><br><br></li>\n</ul>\n<blockquote>\n<h4 id=\"万般无奈之下，又吉君开始了“设计之旅”\"><a href=\"#万般无奈之下，又吉君开始了“设计之旅”\" class=\"headerlink\" title=\"万般无奈之下，又吉君开始了“设计之旅”\"></a>万般无奈之下，又吉君开始了“设计之旅”</h4><p>于是…..<br>这张充满了直男癌风格的展示图就可爱了！</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/5431890-ebd81b62a0a5ce02.jpg\" alt=\"喏，展示图\"></p>\n<p><p align=\"center\"><font color=\"9E9E9E\"><u>喏，展示图</u></font></p><br><br><br><strong>还有经过多次失败弄出来的图标…</strong></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/5431890-26b53c04af1d3859.jpg\" alt=\"么么扎٩(๑❛ᴗ❛๑)۶\"></p>\n<p><p align=\"center\"><font color=\"9E9E9E\"><u>么么扎٩(๑❛ᴗ❛๑)۶</u></font></p><br><br></p>\n</blockquote>\n<ul>\n<li>啊哈哈哈哈哈哈哈哈哈！！！实际上我ruanpapa设计的也挺好看的！但是我就是喜欢我弄的！！！！</li>\n<li>我是又吉君，一个集ruanpapa和智慧于一身的大可爱！</li>\n<li>嚯嚯嚯嚯嚯嚯嚯！！<br><br><br><br><p align=\"right\">by：又吉君</p>\n</li>\n</ul>\n"},{"title":"ruanpapa和又吉君的日常之零","date":"2017-03-30T05:37:32.000Z","_content":"\n### ruanpapa和又吉君到底是什么鬼？\n> * ruanpapa，多年草本植物，性温和，不易上火，无毒无公害。植株上长着不明自来卷毛发，无花期，只结果。茎干呈黑黄，估计大晚上的容易被踩到。\n> * 又吉君，小型食肉动物，性情多变，不易有攻击行为，嗜睡，好吃，眼睛白长了。喜欢晒太阳，毛发蓬松，天气干燥易炸毛，皮肤黄里透白，太阳光下会发光。\n\n### 两货怎么认识的\n- 有一天晚上又吉君出门捕食，走了十公里遇到了这棵草，不留神就踩到了。于是这棵草就赖上又吉君了。时不时给懒惰的又吉君投个食，于是又吉君就更懒惰了。\n\n### 相处模式\n* -“宝宝，给我个亲亲”\n  -“拒绝”\n  -“不给？？？？？！那好吧……”\n\n* -“papapapa，帮我找个软件/教程”\n  -“好的！٩(๑❛ᴗ❛๑)۶”\n\n* -“papa！你这是什么鬼！丑死\n  了！！！！！！！！！”\n  -“.......”\n\n* -“宝宝，我们睡觉吧”\n  -“睡你麻痹！起来嗨”\n\n* -“papa，我好困(´･ω･`)”\n  -“这就困了？？”\n  “........”\n\n  “宝宝？？？”\n\n  “妈的！睡着了！！！？”\n\n### 实际情况\n* 知乎相识\n* 认识三个月\n* 五一去旅游\n* .......\n\n> **未来那么长，请多多指教啊！**\n\n![嘿，旁边的傻papa](http://upload-images.jianshu.io/upload_images/5431890-d5b9a953241a5596.jpg)  \n<p align=\"center\"><font color=\"9E9E9E\"><u>嘿，旁边的傻papa</u></font></p>\n\n<br>\n<br>\n<p align=\"right\">by：又吉君</p>\n\n\n​                                        ","source":"_posts/ruanpapa和又吉君的日常之零.md","raw":"---\ntitle: ruanpapa和又吉君的日常之零\ndate: 2017-03-30 13:37:32\ntags:\ncategories:\n- ruanpapa&又吉君的日常\n---\n\n### ruanpapa和又吉君到底是什么鬼？\n> * ruanpapa，多年草本植物，性温和，不易上火，无毒无公害。植株上长着不明自来卷毛发，无花期，只结果。茎干呈黑黄，估计大晚上的容易被踩到。\n> * 又吉君，小型食肉动物，性情多变，不易有攻击行为，嗜睡，好吃，眼睛白长了。喜欢晒太阳，毛发蓬松，天气干燥易炸毛，皮肤黄里透白，太阳光下会发光。\n\n### 两货怎么认识的\n- 有一天晚上又吉君出门捕食，走了十公里遇到了这棵草，不留神就踩到了。于是这棵草就赖上又吉君了。时不时给懒惰的又吉君投个食，于是又吉君就更懒惰了。\n\n### 相处模式\n* -“宝宝，给我个亲亲”\n  -“拒绝”\n  -“不给？？？？？！那好吧……”\n\n* -“papapapa，帮我找个软件/教程”\n  -“好的！٩(๑❛ᴗ❛๑)۶”\n\n* -“papa！你这是什么鬼！丑死\n  了！！！！！！！！！”\n  -“.......”\n\n* -“宝宝，我们睡觉吧”\n  -“睡你麻痹！起来嗨”\n\n* -“papa，我好困(´･ω･`)”\n  -“这就困了？？”\n  “........”\n\n  “宝宝？？？”\n\n  “妈的！睡着了！！！？”\n\n### 实际情况\n* 知乎相识\n* 认识三个月\n* 五一去旅游\n* .......\n\n> **未来那么长，请多多指教啊！**\n\n![嘿，旁边的傻papa](http://upload-images.jianshu.io/upload_images/5431890-d5b9a953241a5596.jpg)  \n<p align=\"center\"><font color=\"9E9E9E\"><u>嘿，旁边的傻papa</u></font></p>\n\n<br>\n<br>\n<p align=\"right\">by：又吉君</p>\n\n\n​                                        ","slug":"ruanpapa和又吉君的日常之零","published":1,"updated":"2017-04-11T02:00:30.000Z","_id":"cj1cw6rfy000bl53tcxgryb9c","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"ruanpapa和又吉君到底是什么鬼？\"><a href=\"#ruanpapa和又吉君到底是什么鬼？\" class=\"headerlink\" title=\"ruanpapa和又吉君到底是什么鬼？\"></a>ruanpapa和又吉君到底是什么鬼？</h3><blockquote>\n<ul>\n<li>ruanpapa，多年草本植物，性温和，不易上火，无毒无公害。植株上长着不明自来卷毛发，无花期，只结果。茎干呈黑黄，估计大晚上的容易被踩到。</li>\n<li>又吉君，小型食肉动物，性情多变，不易有攻击行为，嗜睡，好吃，眼睛白长了。喜欢晒太阳，毛发蓬松，天气干燥易炸毛，皮肤黄里透白，太阳光下会发光。</li>\n</ul>\n</blockquote>\n<h3 id=\"两货怎么认识的\"><a href=\"#两货怎么认识的\" class=\"headerlink\" title=\"两货怎么认识的\"></a>两货怎么认识的</h3><ul>\n<li>有一天晚上又吉君出门捕食，走了十公里遇到了这棵草，不留神就踩到了。于是这棵草就赖上又吉君了。时不时给懒惰的又吉君投个食，于是又吉君就更懒惰了。</li>\n</ul>\n<h3 id=\"相处模式\"><a href=\"#相处模式\" class=\"headerlink\" title=\"相处模式\"></a>相处模式</h3><ul>\n<li><p>-“宝宝，给我个亲亲”<br>-“拒绝”<br>-“不给？？？？？！那好吧……”</p>\n</li>\n<li><p>-“papapapa，帮我找个软件/教程”<br>-“好的！٩(๑❛ᴗ❛๑)۶”</p>\n</li>\n<li><p>-“papa！你这是什么鬼！丑死<br>了！！！！！！！！！”<br>-“…….”</p>\n</li>\n<li><p>-“宝宝，我们睡觉吧”<br>-“睡你麻痹！起来嗨”</p>\n</li>\n<li><p>-“papa，我好困(´･ω･`)”<br>-“这就困了？？”<br>“……..”</p>\n<p>“宝宝？？？”</p>\n<p>“妈的！睡着了！！！？”</p>\n</li>\n</ul>\n<h3 id=\"实际情况\"><a href=\"#实际情况\" class=\"headerlink\" title=\"实际情况\"></a>实际情况</h3><ul>\n<li>知乎相识</li>\n<li>认识三个月</li>\n<li>五一去旅游</li>\n<li>…….</li>\n</ul>\n<blockquote>\n<p><strong>未来那么长，请多多指教啊！</strong></p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/5431890-d5b9a953241a5596.jpg\" alt=\"嘿，旁边的傻papa\">  </p>\n<p align=\"center\"><font color=\"9E9E9E\"><u>嘿，旁边的傻papa</u></font></p>\n\n<p><br><br><br></p>\n<p align=\"right\">by：又吉君</p>\n\n\n<p>​                                        </p>\n","excerpt":"","more":"<h3 id=\"ruanpapa和又吉君到底是什么鬼？\"><a href=\"#ruanpapa和又吉君到底是什么鬼？\" class=\"headerlink\" title=\"ruanpapa和又吉君到底是什么鬼？\"></a>ruanpapa和又吉君到底是什么鬼？</h3><blockquote>\n<ul>\n<li>ruanpapa，多年草本植物，性温和，不易上火，无毒无公害。植株上长着不明自来卷毛发，无花期，只结果。茎干呈黑黄，估计大晚上的容易被踩到。</li>\n<li>又吉君，小型食肉动物，性情多变，不易有攻击行为，嗜睡，好吃，眼睛白长了。喜欢晒太阳，毛发蓬松，天气干燥易炸毛，皮肤黄里透白，太阳光下会发光。</li>\n</ul>\n</blockquote>\n<h3 id=\"两货怎么认识的\"><a href=\"#两货怎么认识的\" class=\"headerlink\" title=\"两货怎么认识的\"></a>两货怎么认识的</h3><ul>\n<li>有一天晚上又吉君出门捕食，走了十公里遇到了这棵草，不留神就踩到了。于是这棵草就赖上又吉君了。时不时给懒惰的又吉君投个食，于是又吉君就更懒惰了。</li>\n</ul>\n<h3 id=\"相处模式\"><a href=\"#相处模式\" class=\"headerlink\" title=\"相处模式\"></a>相处模式</h3><ul>\n<li><p>-“宝宝，给我个亲亲”<br>-“拒绝”<br>-“不给？？？？？！那好吧……”</p>\n</li>\n<li><p>-“papapapa，帮我找个软件/教程”<br>-“好的！٩(๑❛ᴗ❛๑)۶”</p>\n</li>\n<li><p>-“papa！你这是什么鬼！丑死<br>了！！！！！！！！！”<br>-“…….”</p>\n</li>\n<li><p>-“宝宝，我们睡觉吧”<br>-“睡你麻痹！起来嗨”</p>\n</li>\n<li><p>-“papa，我好困(´･ω･`)”<br>-“这就困了？？”<br>“……..”</p>\n<p>“宝宝？？？”</p>\n<p>“妈的！睡着了！！！？”</p>\n</li>\n</ul>\n<h3 id=\"实际情况\"><a href=\"#实际情况\" class=\"headerlink\" title=\"实际情况\"></a>实际情况</h3><ul>\n<li>知乎相识</li>\n<li>认识三个月</li>\n<li>五一去旅游</li>\n<li>…….</li>\n</ul>\n<blockquote>\n<p><strong>未来那么长，请多多指教啊！</strong></p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/5431890-d5b9a953241a5596.jpg\" alt=\"嘿，旁边的傻papa\">  </p>\n<p align=\"center\"><font color=\"9E9E9E\"><u>嘿，旁边的傻papa</u></font></p>\n\n<p><br><br><br></p>\n<p align=\"right\">by：又吉君</p>\n\n\n<p>​                                        </p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj1cw6rfa0002l53t95wzt1kf","category_id":"cj1cw6rfi0005l53ttjaxrw3i","_id":"cj1cw6rg0000dl53t194ff5hl"},{"post_id":"cj1cw6rfx0009l53tv61jv8s9","category_id":"cj1cw6rfi0005l53ttjaxrw3i","_id":"cj1cw6rg2000fl53tnsom2ggs"},{"post_id":"cj1cw6rfy000bl53tcxgryb9c","category_id":"cj1cw6rfi0005l53ttjaxrw3i","_id":"cj1cw6rg4000hl53tpe7mivqq"},{"post_id":"cj1cw6rff0004l53tw77ft7b2","category_id":"cj1cw6rfx000al53tmqoubm9n","_id":"cj1cw6rg5000kl53t3v0qdetc"},{"post_id":"cj1cw6rfm0006l53trdkkgxyy","category_id":"cj1cw6rfi0005l53ttjaxrw3i","_id":"cj1cw6rg6000nl53tocycrf9w"},{"post_id":"cj1cw6rfr0008l53tcvxk0jkm","category_id":"cj1cw6rfx000al53tmqoubm9n","_id":"cj1cw6rg7000ol53t60x820km"}],"PostTag":[{"post_id":"cj1cw6rff0004l53tw77ft7b2","tag_id":"cj1cw6rfq0007l53t3dzcxeeh","_id":"cj1cw6rg4000il53tkl3g8wdc"},{"post_id":"cj1cw6rff0004l53tw77ft7b2","tag_id":"cj1cw6rfz000cl53takebac6f","_id":"cj1cw6rg5000ll53tqnhgflog"},{"post_id":"cj1cw6rfr0008l53tcvxk0jkm","tag_id":"cj1cw6rfq0007l53t3dzcxeeh","_id":"cj1cw6rg7000pl53tgamtuxgy"},{"post_id":"cj1cw6rfr0008l53tcvxk0jkm","tag_id":"cj1cw6rg6000ml53tzr5mxo9f","_id":"cj1cw6rg7000ql53t9d5yjt6e"}],"Tag":[{"name":"iOS","_id":"cj1cw6rfq0007l53t3dzcxeeh"},{"name":"Objective-C","_id":"cj1cw6rfz000cl53takebac6f"},{"name":"Swift","_id":"cj1cw6rg6000ml53tzr5mxo9f"}]}}